{"version":3,"sources":["webpack:///./src/mixins/pointsMixin.ts","webpack:///./src/utils/TsStat/IpcRenderGtag.ts","webpack:///./src/utils/TsStat/tsStat.js","webpack:///./src/constants/pointsDef.ts","webpack:///./src/qt-ipc/base/IpcBase.ts"],"names":["ipcRenderer","formatPointData","event_id","data","Object","freeze","sendPoint","tsStat","TsStat","getInstance","event","defineComponent","computed","routeName","this","$route","name","_pointRouteName","actionMap","Map","PointRouteMap","Workbench","BatchRetouch","PhotoFinishing","Export","EmptyPage","get","_distFigureEvent","includes","PointEvent","CakeRefine","CakeGallery","PointAddSecond","cake_operate","PointRefineOperate","AddSecond","PointClickOriginal","ClickOriginal","PointClickFit","ClickFit","PointSwitchGender","SwitchGender","PointAddPresetButton","AddPresetButton","PointAddApplyButton","AddApplyButton","PointImageAdjustment","ImageAdjustment","PointPortraitBeautification","PortraitBeautification","PointBackgroundAdjustment","BackgroundAdjustment","PointModifyGender","ModifyGender","PointFeedbackChoose","FeedbackChooseCategory","PointFeedbackInputContent","FeedbackInputContent","PointClickSetting","CakeSetting","PointSettingOperate","ClickSetting","PointClickSettingReturn","ClickReturn","PointExportSelectPath","CakeExport","PointExportOperate","SelectPath","PointClickBackstage","CakeAvatar","PointCakeAvatarOperate","ClickBackstage","PointClickSmear","ClickSmear","PointClickPreservation","ClickSmearPreservation","PointClickSmearCancel","ClickSmearCancel","PointClickSmearReset","ClickSmearReset","PointClickSmearHistoryBack","ClickSmearHistoryBack","cake_position","ClickHistory","PointDoubleClickDot","DoubleClickDot","PointDoubleClickTitle","DoubleClickTitle","PointPresetReset","PresetReset","mounted","methods","PointAddStar","isFavourite","eventId","AddStar","PointCheckOriginalPhoto","CheckOriginalPhoto","PointDeleteThumbnail","Delete","PointDeleteAllThumbnail","DeleteAll","PointFeedbackClick","Feedback","PointFeedbackConfirm","FeedbackConfirm","cake_feedback","JSON","stringify","PointFeedbackCancel","FeedbackCancel","PointSavePresetSubmit1","SavePresetSubmit1","PointSavePresetSubmit2","SavePresetSubmit2","cake_new_preset2","PointSavePresetCover","SavePresetCover","cake_override_preset","PointSelectOne","SelectOne","PointSelectFilter","SelectFilter","cake_feature","PointClickSettingClose","ClickClose","PointClickSettingConfirm","ClickConfirm","cake_value","PointExportAdvancedSetting","val","length","AdvancedSettings","PointExportCancel","Cancel","PointShowOriginThumb","OriginThumb","PointShowEffectThumb","EffectThumb","PointExportConfirm","id","Confirm","cake_setting_value","cake_name","PointExportClick","cakeValue","exportSetting","cakeFeature","totalNumber","isNoePresetNumber","ExportButton","PointMemberPriceClick","source","CakeH5MemberPrice","PointMemberCloseClick","PointDragPanel","DragPanel","PointSwipeSelect","SwipeSelect","PointParameterAdjustmentReset","ParameterAdjustmentReset","PointManualModifyComplete","PointManualOperate","clickEffectValue","PointInviteActivityClick","param","PointInviteActivityExposure","PointCakeImport","CakeImport","PointExportSelectPreset","SelectPreset","PointExportListDeleteBtn","CakeExportList","PointExportListOperate","DeleteBtn","PointExportListRetryBtn","RetryBtn","PointExportListPauseBtn","PauseBtn","PointExportListStartBtn","StartBtn","PointExportListPauseAllBtn","PauseAllBtn","PointExportListStartAllBtn","StartAllBtn","PointInitGuide","step","operateStep","PointGuideOperate","InitWorkbenchGuide","InitPresetGuide","InitSlideGuide","InitSelectGuide","InitSynchronizeGuide","InitExportGuide","CakeNewuserGuide","PointClickQuit","ClickQuit","PointFillInfo","CakeFillinfo","PointClientClose","on","args","pageview","path","title","to","meta","PointClickSmearTool","toolKey","sliderKey","positionMap","brush","eraser","sliderMap","size","feather","opacity","position","feature","ClickSmearTool","PointClickSmearClose","ClickSmearClose","PointZoomCompare","PointSelectIdPhotoSize","SelectIdPhotoSize","label","PointModifyPhotoDPI","ModifyDPI","typeDPI","type","gInstance","IpcRenderGtag","IpcBase","constructor","super","register","ipcHandler","formatData","params","send","login","uid","merchant_id","logout","gtag","instance","handler","console","log","userId","PointHelpOperate","PointParamOperate","PointFeatureHslMap","EffectParamEnum","EnhanceEditHSLHue","EnhanceEditHSLLightness","EnhanceEditHSLSaturation","PointFeatureHslColorMap","EffectParamHslColor","Red","Orange","Yellow","Green","Cyan","Blue","Purple","Magenta","HslColorMerge","hsl","color","PointParamsFeatureMap","slide_remove_defects","Spotless","RemoveNevus","SpotlessBody","RemoveForeheadLines","RemoveEyeLines","LightenPouch","TearTrough","RemoveNeckLines","RemoveDoubleChin","slide_beauty_rod","NeutralGrayRetouch","MoisturizingSkin","MoisturizingSkinNoFace","FacialStereo3DLight","FacialStereo3DShadow","SkinColorLighten","SkinColorWhiten","SkinColorRuddy","SkinColorUniform","StretchMark","StretchMarkLine","TeethWhiten","ToothRepairing","BrightEye","MakeupEnhanceEye","MakeupEnhanceMouth","slide_facelift_rod","HeadNarrow","FaceLift","FacialRefineSmallFace","FacialRefineTemple","FacialRefineCheekBone","FaceWidth","FacialRefineJaw","FacialRefineChin","FacialRefineHairLine","FacialRefineEyeZoom","FacialRefineEyeHigher","FacialRefineEyeWidth","FacialRefineEyeDistance","FacialRefineEyeAngle","FacialRefineEyeUpDownAdjust","FacialRefineNose","FacialRefineNoseHigher","FacialRefineNoseBridge","FacialRefineNoseAlar","FacialRefineNoseTip","FacialRefineMouthSize","FacialRefineMouthWidth","FacialRefineMouthHigher","FacialRefineMouthUpperLip","FacialRefineMouthLowperLip","FacialRefineEyeBrowThickness","FacialRefineEyeBrowDistance","FacialRefineEyeBrowAngle","FacialRefineEyeBrowShape","FacialRefineEyeBrowHigher","LeftFaceLift","RightFaceLift","LeftTemple","RightTemple","LeftCheekBone","RightCheekBone","LeftJaw","RightJaw","LeftEyeZoom","RightEyeZoom","LeftEyeHigher","RightEyeHigher","LeftEyeWidth","RightEyeWidth","LeftEyeDistance","RightEyeDistance","LeftEyeAngle","RightEyeAngle","LeftEyeUpDownAdjust","RightEyeUpDownAdjust","LeftEyeBrowThickness","RightEyeBrowThickness","LeftEyeBrowDistance","RightEyeBrowDistance","LeftEyeBrowAngle","RightEyeBrowAngle","LeftEyeBrowShape","RightEyeBrowShape","LeftEyeBrowHigher","RightEyeBrowHigher","SymmetryReshapeSwitch","SymmetryReshapeBody","SymmetryReshapeFace","slide_body_rod","AIBodyReshape","PoseRefineSlimHand","PoseRefineSlimWaist","PoseRefineSlimLeg","PoseRefineEnhanceBreast","PoseRefineNiceButtock","PoseRefineSlim","PoseRefineShrinkHead","PoseRefineLengthen","PoseRefineHeighten","PoseRefineSlimLeftNeck","PoseRefineSlimRightNeck","PoseRefineSlimNeck","slide_color_rod","FilterAlpha","EnhanceEditColorTemperature","EnhanceEditHue","EnhanceEditExposure","EnhanceEditContrast","EnhanceEditHighlight","EnhanceEditShadow","EnhanceEditWhite","EnhanceEditBlack","EnhanceEditCameraRawSharpen","EnhanceEditCameraRawVibrance","EnhanceEditSaturation","EnhanceEditCRDBStrength","EnhanceEditCRDBRadius","EnhanceEditCRDBDetail","slide_makeup_rod","SuitMakeup","EyebrowMakeup","EyeMakeup","EyelashMakeup","BlusherMakeup","LipMakeup","slide_background_rod","BgCleanSwitch","0","1","BgCleanMode","BgCleanMooreSwitch","BgCleanMooreMode","BackgroundEnhance","BgReplaceGamma","BgReplaceBeta","slide_sky_adjustment_rod","SkyChoose","SkyEdgeTransition","SkyTemp","SkySaturation","SkyBrightness","SkyVague","SkyFlip","slide_sky_scenery_adjustment_rod","SkySceneryColor","SkyCharacterColor","slide_sky_water_adjustment_rod","SkyWaterReflex","SkyWaterVague","MakeUpTabClickMap","MakeUpSuitClickMap","IpcNotifyEvent","eventList","_callback","forEach","callback","distributeCallBack","set","symbol","has","clear","delete","identify","isSymbol","key","IpcBaseEasy","notifyEventPool","applyMessageReceived","broadcast","addListener","Symbol","notifyEvent","removeListener","clearListener","clearAll"],"mappings":"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,MAAsB,KAOlC,SAAYlD,GACRA,6BACAA,4BACAA,2BACAA,mBACAA,0BACAA,4BANJ,CAAYA,MAAa,KAYzB,SAAYwK,GACRA,+CACAA,yCACAA,uCACAA,yCACAA,mDACAA,yCACAA,4BAEAA,qDACAA,uDACAA,6CACAA,gCACAA,mDAbJ,CAAYA,MAAiB,KAmB7B,SAAY1J,GACRA,yCACAA,4BACAA,oCACAA,0BACAA,4BACAA,qBACAA,mCACAA,gCACAA,wBACAA,qCACAA,4BACAA,6CACAA,mDACAA,4CACAA,uDACAA,0BACAA,kCACAA,yCACAA,qCACAA,uCACAA,kCACAA,kCACAA,yBACAA,uDACAA,mDACAA,sCACAA,wCACAA,oCACAA,qCACAA,uCACAA,8BACAA,uDACAA,2CACAA,yCACAA,uCACAA,yCACAA,sDACAA,kCACAA,uCACAA,uCACAA,2CACAA,gCACAA,2DACAA,yDACAA,6CACAA,yCACAA,4BACAA,oCACAA,sCACAA,oCACAA,uCACAA,4BAEAA,0CACAA,gDACAA,kDACAA,gEAzDJ,CAAYA,MAAkB,KA+D9B,SAAY0B,GACRA,kCACAA,8BACAA,gCACAA,kCAJJ,CAAYA,MAAmB,KAU/B,SAAY+L,GACRA,0BACAA,wCACAA,wCACAA,oCACAA,kCACAA,sBANJ,CAAYA,MAAgB,KAY5B,SAAYzF,GACRA,2CADJ,CAAYA,MAAkB,KAO9B,SAAYhG,GACRA,kCACAA,8BACAA,kCACAA,0CACAA,qBACAA,uBACAA,0CACAA,yCARJ,CAAYA,MAAkB,KAe9B,SAAY0L,GACRA,uCACAA,2CACAA,mCACAA,yCACAA,qCACAA,yBACAA,mCACAA,6CACAA,+CACAA,sDACAA,qEACAA,iEACAA,yCAbJ,CAAYA,MAAiB,KAgB7B,SAAY/E,GACRA,gCACAA,kCACAA,6CACAA,qCACAA,mCACAA,mCACAA,mCACAA,6BACAA,6BACAA,6CAVJ,CAAYA,MAAsB,KAgB3B,MAAMgF,EAAqB,CAC9B,CAACC,OAAgBC,mBAAoB,MACrC,CAACD,OAAgBE,yBAA0B,aAC3C,CAACF,OAAgBG,0BAA2B,cAMnCC,EAA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","file":"js/chunk-4d3498e2.90f5f5a9.js","sourcesContent":["import { defineComponent } from 'vue'\nimport {\n    PointEvent,\n    PointExportOperate,\n    PointHelpOperate,\n    PointRefineOperate,\n    PointRouteMap,\n    PointSettingOperate,\n    PointExportListOperate,\n    PointGuideOperate, PointManualOperate,\n    PointCakeAvatarOperate\n} from '@/constants/pointsDef'\n\n// @ts-ignore\nimport TsStat from '@/utils/TsStat/tsStat'\nimport { Optional } from '@/universal/types/foundation'\n// import ipcRenderer from '@/qt-ipc/Ipc-renderer'\nconst ipcRenderer: any = null\n\ninterface PointQuery<T> {\n    event_id: string,\n    data: T\n}\n\n/**\n * 埋点 数据格式化\n * @param event_id\n * @param data\n */\nfunction formatPointData<T>(event_id: string, data: T): PointQuery<T> {\n    return Object.freeze({ event_id, data })\n}\n\n// 发送埋点数据\nfunction sendPoint<T>(event_id: string, data: T): void {\n    const tsStat = TsStat.getInstance()\n    tsStat.event(event_id, data)\n}\n\n// @ts-ignore\nexport default defineComponent({\n    data() {\n        return {}\n    },\n\n    computed: {\n        routeName(): string {\n            // @ts-ignore\n            return this.$route.name || ''\n        },\n\n        _pointRouteName(): string {\n            const actionMap = new Map([\n                ['index', PointRouteMap.Workbench],\n                ['batchRetouch', PointRouteMap.BatchRetouch],\n                ['photoFinishing', PointRouteMap.PhotoFinishing],\n                ['exportList', PointRouteMap.Export],\n                ['importImage', PointRouteMap.EmptyPage],\n                ['', '']\n            ])\n            // @ts-ignore\n            return actionMap.get(this.routeName) || ''\n        },\n\n        _distFigureEvent(): string {\n            // @ts-ignore\n            if ([PointRouteMap.PhotoFinishing, PointRouteMap.BatchRetouch].includes(this._pointRouteName)) {\n                // @ts-ignore\n                return this._pointRouteName === PointRouteMap.PhotoFinishing\n                    ? PointEvent.CakeRefine\n                    : PointEvent.CakeGallery\n            }\n            return ''\n        },\n\n        // 二次导入\n        PointAddSecond() {\n            if (this._distFigureEvent) {\n                // @ts-ignore\n                return formatPointData(this._distFigureEvent, {\n                    cake_operate: PointRefineOperate.AddSecond\n                })\n            }\n            return false\n        },\n        // 点击1:1图标就统计\n        PointClickOriginal: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickOriginal }),\n        // 点击合适图标就统计\n        PointClickFit: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickFit }),\n        PointSwitchGender: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.SwitchGender }),\n        PointAddPresetButton: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.AddPresetButton }),\n        // PointAddPresetIcon: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.AddPresetIcon }),\n        PointAddApplyButton: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.AddApplyButton }),\n        PointImageAdjustment: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ImageAdjustment }),\n        PointPortraitBeautification: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.PortraitBeautification }),\n        PointBackgroundAdjustment: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.BackgroundAdjustment }),\n        PointModifyGender: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ModifyGender }),\n        //问题反馈\n        PointFeedbackChoose: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.FeedbackChooseCategory }), //--点击分类\n        PointFeedbackInputContent: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.FeedbackInputContent }),//--点击输入\n        // PointFeedbackCancel: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.FeedbackCancel }),//--点击取消\n        // PointFeedbackConfirm: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.FeedbackConfirm }),//--点击提交\n\n\n        // 设置\n        PointClickSetting: () => formatPointData(PointEvent.CakeSetting, { cake_operate: PointSettingOperate.ClickSetting }),\n        PointClickSettingReturn: () => formatPointData(PointEvent.CakeSetting, { cake_operate: PointSettingOperate.ClickReturn }),\n\n        PointExportSelectPath: () => formatPointData(PointEvent.CakeExport, { cake_operate: PointExportOperate.SelectPath }),\n\n        // PointExportListExportedTab: () => formatPointData(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.ExportedTab }),\n        // PointExportListExportingTab: () => formatPointData(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.ExportingTab }),\n        PointClickBackstage: () => formatPointData(PointEvent.CakeAvatar, { cake_operate: PointCakeAvatarOperate.ClickBackstage }),\n\n        // 涂抹埋点\n        PointClickSmear: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmear }),\n        PointClickPreservation: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmearPreservation }),\n        PointClickSmearCancel: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmearCancel }),\n        PointClickSmearReset: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmearReset }),\n        PointClickSmearHistoryBack: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmearHistoryBack, cake_position: PointRefineOperate.ClickHistory }),\n        PointDoubleClickDot: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.DoubleClickDot }),\n        PointDoubleClickTitle: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.DoubleClickTitle }),\n        PointPresetReset: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.PresetReset }),\n    //    PointParameterAdjustmentReset: () => formatPointData(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ParameterAdjustmentReset })\n    },\n\n    mounted() {\n    },\n\n    methods: {\n        // PointAddPresetSort(): void {\n        //     sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.AddPresetSort })\n        // },\n\n        PointAddStar(data: any): void {\n            if (data.isFavourite) {\n                // @ts-ignore\n                const eventId = this.routeName === 'photoFinishing' ? PointEvent.CakeRefine : PointEvent.CakeGallery\n                sendPoint(eventId, { cake_operate: PointRefineOperate.AddStar })\n            }\n        },\n\n        PointCheckOriginalPhoto(): void {\n            if (this._distFigureEvent) {\n                // @ts-ignore\n                sendPoint(this._distFigureEvent, { cake_operate: PointRefineOperate.CheckOriginalPhoto })\n            }\n        },\n\n        PointDeleteThumbnail(): void {\n            if (this._distFigureEvent) {\n                // @ts-ignore\n                sendPoint(this._distFigureEvent, { cake_operate: PointRefineOperate.Delete })\n            }\n        },\n\n        PointDeleteAllThumbnail(): void {\n            if (this._distFigureEvent) {\n                // @ts-ignore\n                sendPoint(this._distFigureEvent, { cake_operate: PointRefineOperate.DeleteAll })\n            }\n        },\n        //右键点击问题上报埋点\n        PointFeedbackClick(): void {\n            if (this._distFigureEvent) {\n                // @ts-ignore\n                sendPoint(this._distFigureEvent, { cake_operate: PointRefineOperate.Feedback })\n            }\n        },\n        //点击问题上报提交按钮\n        PointFeedbackConfirm(data: any): void {\n            // @ts-ignore\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.FeedbackConfirm,\n                cake_feedback: JSON.stringify(data)\n            })\n        },\n        //点击问题上报取消按钮\n        PointFeedbackCancel(): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.FeedbackCancel\n            })\n        },\n\n        //保存预设，保存按钮\n        PointSavePresetSubmit1(): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.SavePresetSubmit1\n            })\n        },\n        //保存预设，创建新预设按钮\n        PointSavePresetSubmit2(data: string): void{\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.SavePresetSubmit2,\n                cake_new_preset2: data\n            })\n        },\n        //保存预设,覆盖预设按钮\n        PointSavePresetCover(data: string): void{\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.SavePresetCover,\n                cake_override_preset: data\n            })\n        },\n\n        PointSelectOne(): void {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.SelectOne })\n        },\n\n        PointSelectFilter(data: any): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.SelectFilter,\n                cake_feature: (data && data.name) || ''\n            })\n        },\n\n        PointClickSettingClose(): void {\n            sendPoint(PointEvent.CakeSetting, { cake_operate: PointSettingOperate.ClickClose })\n        },\n\n        PointClickSettingConfirm(data: { threads: number, cache: number, previewsize: number, areanetwork?: boolean }): void {\n            sendPoint(PointEvent.CakeSetting, {\n                cake_operate: PointSettingOperate.ClickConfirm,\n                cake_value: JSON.stringify(data)\n            })\n        },\n\n        PointExportAdvancedSetting(val: string | []): void {\n            if (val && val.length > 0) {\n                sendPoint(PointEvent.CakeExport, { cake_operate: PointExportOperate.AdvancedSettings })\n            }\n        },\n\n        PointExportCancel(): void {\n            sendPoint(PointEvent.CakeExport, { cake_operate: PointExportOperate.Cancel })\n        },\n\n        PointShowOriginThumb(): void {\n            sendPoint(PointEvent.CakeSetting, { cake_operate: PointExportOperate.OriginThumb })\n        },\n        PointShowEffectThumb(): void {\n            sendPoint(PointEvent.CakeSetting, { cake_operate: PointExportOperate.EffectThumb })\n        },\n\n        PointExportConfirm(data: { newfile: boolean; defaultpath: boolean; keepfolder: boolean }, id?: string): void {\n            sendPoint(PointEvent.CakeExport, {\n                cake_operate: PointExportOperate.Confirm,\n                cake_setting_value: JSON.stringify(data),\n                cake_name: id\n            })\n        },\n\n        PointExportClick(cakeValue: string, exportSetting: any): void {\n            // @ts-ignore\n            const name = this._pointRouteName\n            const cakeFeature = `${ exportSetting.totalNumber }_xgt${ exportSetting.totalNumber - exportSetting.isNoePresetNumber }_yt${ exportSetting.isNoePresetNumber }`\n            sendPoint(PointEvent.CakeExport, {\n                cake_operate: PointExportOperate.ExportButton,\n                cake_setting_value: `${ cakeValue }_${ name }`,\n                cake_position: name,\n                cake_feature: cakeFeature\n            })\n        },\n        PointMemberPriceClick(source: Optional<string>): void {\n            sendPoint(PointEvent.CakeH5MemberPrice, {\n                cake_operate: 'init_source',\n                // @ts-ignore\n                source: source ? source : this._pointRouteName\n            })\n        },\n        PointMemberCloseClick(): void {\n            sendPoint(PointEvent.CakeH5MemberPrice, {\n                cake_operate: 'close'\n            })\n        },\n\n        PointDragPanel(): void {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.DragPanel })\n        },\n\n        PointSwipeSelect(): void {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.SwipeSelect })\n        },\n\n        PointParameterAdjustmentReset() {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ParameterAdjustmentReset })\n        },\n\n        /**\n         * 滑竿数值手动修改完成\n         */\n        PointManualModifyComplete(): void {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointManualOperate.clickEffectValue })\n        },\n\n        // 注意 为何不放在v-gtag-event里面处理:因为 此处混入在FuncHeader或MainFuncHeader里面读取到的this指针是vuecomponent的构造器，所以参数从外部传入。\n        PointInviteActivityClick(param: any) {\n            sendPoint('activity_entrance_click', { ...param })\n        },\n\n        PointInviteActivityExposure(param: { source_position: string }) {\n            sendPoint('Invitation_exposure', { ...param })\n        },\n\n        PointCakeImport(val: string): void {\n            sendPoint(PointEvent.CakeImport, { cake_value: val })\n        },\n\n        PointExportSelectPreset(): void {\n            sendPoint(PointEvent.CakeExport, { cake_operate: PointExportOperate.SelectPreset })\n        },\n\n        // PointExportListBillingRulesPopup(): void {\n        //     sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.BillingRulesPopup })\n        // },\n\n        PointExportListDeleteBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.DeleteBtn })\n        },\n        PointExportListRetryBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.RetryBtn })\n        },\n        PointExportListPauseBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.PauseBtn })\n        },\n        PointExportListStartBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.StartBtn })\n        },\n        PointExportListPauseAllBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.PauseAllBtn })\n        },\n        PointExportListStartAllBtn(): void {\n            sendPoint(PointEvent.CakeExportList, { cake_operate: PointExportListOperate.StartAllBtn })\n        },\n\n        /**\n         * 新手引导\n         */\n        PointInitGuide(step: number): void {\n            let operateStep = null\n            switch (step) {\n                case 1:\n                    operateStep = PointGuideOperate.InitWorkbenchGuide\n                    break\n                case 2:\n                    operateStep = PointGuideOperate.InitPresetGuide\n                    break\n                case 3:\n                    operateStep = PointGuideOperate.InitSlideGuide\n                    break\n                case 4:\n                    operateStep = PointGuideOperate.InitSelectGuide\n                    break\n                case 5:\n                    operateStep = PointGuideOperate.InitSynchronizeGuide\n                    break\n                case 6:\n                    operateStep = PointGuideOperate.InitExportGuide\n                    break\n                default:\n                    operateStep = PointGuideOperate.InitWorkbenchGuide\n                    break\n            }\n            sendPoint(PointEvent.CakeNewuserGuide, { cake_operate: operateStep })\n        },\n        PointClickQuit(step: number): void {\n            sendPoint(PointEvent.CakeNewuserGuide, { cake_operate: `${ PointGuideOperate.ClickQuit }_${ step }` })\n        },\n\n        PointFillInfo(): void {\n            sendPoint(PointEvent.CakeFillinfo, {})\n        },\n\n        /**\n         * 模拟退出程序页面\n         */\n        PointClientClose() {\n            ipcRenderer.on('gtag_page_close', (event: any, args: string) => {\n                const tsStat = TsStat.getInstance()\n\n                if (args === 'close') {\n                    tsStat.pageview({\n                        path: '/quit',\n                        name: 'Quit',\n                        title: '退出程序'\n                    })\n                } else if (args === 'return') {\n                    const to = this.$route as any\n                    tsStat.pageview({\n                        path: to.path,\n                        name: to.name,\n                        title: to.meta.title // 上报当前页面 PV\n                    })\n                }\n            })\n        },\n\n        PointClickSmearTool(toolKey: string, sliderKey: string): void {\n            const positionMap: { [key: string]: string } = {\n                brush: 'smear_paint_brush',\n                eraser: 'smear_eraser'\n            }\n\n            const sliderMap: { [key: string]: string } = {\n                size: 'smear_size',\n                feather: 'smear_emergence',\n                opacity: 'smear_opacity'\n            }\n\n            const position = positionMap[toolKey]\n            const feature = sliderMap[sliderKey]\n\n            if (!position || !feature) return\n\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.ClickSmearTool,\n                cake_position: position,\n                cake_feature: feature\n            })\n        },\n\n        PointClickSmearClose(): void {\n            sendPoint(PointEvent.CakeRefine, { cake_operate: PointRefineOperate.ClickSmearClose })\n        },\n\n        PointZoomCompare(position: string): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: 'zoom_compare',\n                cake_position: position\n            })\n        },\n\n        // PointSelectIdPhotoBackground(data: any): void {\n        //     sendPoint(PointEvent.CakeRefine, {\n        //         cake_operate: PointRefineOperate.SelectIdPhotoBackground,\n        //         cake_feature: (data && data.name) || ''\n        //     })\n        // },\n\n        PointSelectIdPhotoSize(data: any): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.SelectIdPhotoSize,\n                cake_feature: (data && data.label) || ''\n            })\n        },\n\n        PointModifyPhotoDPI(data: { typeDPI: number, type: string }): void {\n            sendPoint(PointEvent.CakeRefine, {\n                cake_operate: PointRefineOperate.ModifyDPI,\n                cake_value: `dpi_${data.typeDPI}_${data.type}`\n            })\n        },\n    }\n})\n","import ipcBroadcast from '@/qt-ipc/qt-broadcast'\nimport { kBroadCastWinEventString, WinIPCMessage, WinType } from '@/constants/winIpc-def'\nimport { CLIENT_NAME_EN, CLIENT_NAME } from '@/universal/types/config'\nimport {ShareObjectModel} from \"@/universal/model/ShareObjectModel/ShareObjectModel\";\nimport {IpcBase} from \"@/qt-ipc/base/IpcBase\";\n\nlet gInstance: IpcRenderGtag|null = null\nexport default class IpcRenderGtag extends IpcBase<any>{\n    constructor() {\n        super();\n    }\n    static getInstance(){\n        gInstance = gInstance ? gInstance : new IpcRenderGtag()\n        return gInstance\n    }\n    register(ipcHandler: any) {\n        super.register(ipcHandler);\n    }\n\n    formatData(params: any): any {\n        return {\n        }\n    }\n\n    send(params = {}): Promise<void> {\n        return  this.ipcHandler?.send(params)\n    }\n\n    /**\n     * 登入\n     * @param uid\n     */\n    login(uid: string, merchant_id: string): Promise<void> {\n        return this.ipcHandler?.login(uid,merchant_id)\n    }\n\n    /**\n     * 登出\n     */\n    logout(): Promise<void> {\n        return this.ipcHandler?.logout()\n    }\n\n    /**\n     * 通用事件\n     * @param event_id\n     * @param args\n     * @param event\n     */\n    event(event_id: string, args = {}, event = {}): Promise<void>  {\n        return this.ipcHandler?.event(event_id,args,event)\n    }\n\n    /**\n     * 页面跳转事件\n     * @param path\n     * @param args\n     */\n    pageview(path: string, args: any = {}): Promise<void>  {\n        return this.ipcHandler?.pageview(path,args)\n    }\n}\n","import { GTAG_MEASUREMENT_ID, APP_VERSION } from '@/universal/types/config'\nimport {ShareObjectModel} from \"#/model/ShareObjectModel/ShareObjectModel\";\nimport IpcRenderGtag from '@/utils/TsStat/IpcRenderGtag'\nexport default class TsStat {\n    constructor() {\n        this.gtag = null\n        this.instance = null\n        this.gtag = IpcRenderGtag.getInstance()\n    }\n\n    /**\n     * 单例\n     * @returns {TsStat}\n     */\n    static getInstance() {\n        this.instance = this.instance ? this.instance : new TsStat()\n        return this.instance\n    }\n\n    register(handler){\n        this.gtag.register(handler)\n    }\n\n    // 通用埋点\n    event(event_id, data = {}) {\n        // 仅上报登录用户\n        // if (this.gtag && event_id && this.gtag.uid) {\n        //     this.gtag.event(event_id, {\n        //         ...data\n        //     })\n        // }\n        console.log('lxl event=', event_id, data)\n        this.gtag.event(event_id, {\n            ...data\n        })\n    }\n\n    pageview(data = {}) {\n        // 仅上报登录用户\n        if (this.gtag) {\n            const path = data.path\n            delete data.path\n            this.gtag.pageview(path, { ...data })\n        }\n    }\n\n    login(userId, merchant_id) {\n        this.gtag.login(userId, merchant_id)\n        // this.gtag.updateCid(`${this.system.mac_addr}.${userId}`)\n        // this.gtag.event('login')\n    }\n\n    logout() {\n        if (this.gtag) {\n            // this.gtag.event('logout')\n            this.gtag.logout()\n        }\n    }\n}\n","import {\n    EffectParamEnum,\n    EffectParamHslColor\n} from '@/constants/presetParams/ParamEnum'\n\n/**\n * 埋点事件\n * 枚举\n */\nexport enum PointEvent {\n    CakeNavMenu = 'cake_nav_menu',              // 导航菜单\n    CakeImport = 'cake_import',                 // 导入\n    CakeGallery = 'cake_gallery',               // 图库\n    CakeRefine = 'cake_refine',                 // 精修\n    CakeSetting = 'cake_setting',               // 设置\n    CakeHelp = 'cake_help',                     // 帮助\n    CakeExport = 'cake_export',                 // 导出\n    CakeH5MemberPrice = 'cakeh5_member_price',  // H5 价格弹窗\n    AppStart = 'app_start',                     // app启动\n    Login = 'login',                            // 登录\n    Logout = 'logout',                          // 登出\n    CakeSession = 'cake_session',\n    CakeExportList = 'cake_export_list',         // 导出列表\n    CakeNewuserGuide = 'cake_newuser_guide',\n    CakeFillinfo = 'cake_fillinfo',\n    CakeAvatar = 'cake_avatar',\n    CakeWorkBench = 'cake_workbench',            //项目页面\n    CakeUpgradeGuide = 'upgrade_guide',            //引导圆圈\n    CakeImageAdjustment = 'cake_image_adjustment'  //图像调节预览\n}\n\nexport enum PointCakeAvatarOperate {\n    ClickBackstage = 'click_backstage'\n}\n\n/**\n * 页面 RouteName 映射\n */\nexport enum PointRouteMap {\n    PhotoFinishing = 'refine',\n    BatchRetouch = 'gallery',\n    Workbench = 'workbench',\n    Login = 'login',\n    Export = 'export_list',\n    EmptyPage = 'empty_page' //导入的空页面\n}\n\n/**\n * 新手引导\n */\nexport enum PointGuideOperate {\n    InitWorkbenchGuide = 'init_workbench_guide',       // 出现工作台引导\n    InitPresetGuide = 'init_preset_guide',             // 出现预设引导\n    InitSlideGuide = 'init_slide_guide',               // 出现滑杆引导\n    InitSelectGuide = 'init_select_guide',             // 出现多选引导\n    InitSynchronizeGuide = 'init_synchronize_guide',   // 出现同步到选中引导\n    InitExportGuide = 'init_export_guide',             // 出现导出引导\n    ClickQuit = 'click_quit',                          // 点击退出就统计\n\n    InitImgAdjustmentGuide = 'image_adjustment_guide', //点击图像调节引导\n    InitBackgroundGuide = 'background_adjustment_guide', //点击背景调节引导\n    InitHistoryGuide = 'history_record_guide',            //点击历史记录引导\n    InitCropGuide = 'crop_guide',\n    InitPresetSettingGuide = 'preset_setting_guide',\n}\n\n/**\n * 精修操作\n */\nexport enum PointRefineOperate {\n    CheckOriginalPhoto = 'original_photo',              // 查看原图\n    AddSecond = 'add_second',                           // 二次导入\n    ClickOriginal = 'click_original',                   // 点击1：1按钮\n    ClickFit = 'click_fit',                             // 点击合适图标\n    SelectOne = 'select_one',                           // 对图片进行选中\n    Delete = 'delete',                                  // 右键点击删除\n    DeleteAll = 'delete_all_select',                    // 右键点击批量删除\n    SwipeSelect = 'swipe_select',                       // 鼠标按住滑动选图 （2.8.0）\n    AddStar = 'add_star',                               // 对图片进行星标\n    AddPresetSort = 'add_preset_sort',                  // 点击预设模块右上角新建分类\n    DragPanel = 'drag_panel',                           // 拖动面板滑竿调整面板 （2.8.0）\n    ImageAdjustment = 'image_adjustment_icon',          // 点击“图像调节”按钮\n    PortraitBeautification = 'portrait_beauty_icon',    // 点击“人像美化”按钮\n    OperationHistory = 'history_record_icon',           // 点击“历史记录”按钮\n    BackgroundAdjustment = 'background_adjustment_icon',// 点击“背景调整”按钮\n    CropIcon = 'crop_icon',\n    ModifyGender = 'modify_gender',                     // 点击性别修改的icon\n    AddPresetButton = 'add_preset_button',              // 保存新预设\n    AddPresetIcon = 'add_preset_icon',                  // 添加预设图标\n    AddApplyButton = 'add_apply_button',                // 同步预设\n    SwitchGender = 'switch_gender',                     // 切换人物\n    SelectFilter = 'select_filter',                      // 选择滤镜\n    Feedback = 'feedback',                               //右键点击问题反馈\n    FeedbackChooseCategory = 'feedback_choose_category',  //问题反馈--点击问题分类\n    FeedbackInputContent = 'feedback_input_content',    //问题反馈--点击输入内容\n    FeedbackCancel = 'feedback_cancel',                  //问题反馈--点击取消\n    FeedbackConfirm = 'feedback_confirm',                 //问题反馈--点击确定（反馈图片类型）\n    SavePresetSubmit1 = 'new_preset',                   //保存预设--新建全新预设点击“保存”按钮\n    SavePresetSubmit2 = 'new_preset2',                   //保存预设--点击“创建新预设”按钮\n    SavePresetCover = 'override_preset',                 //保存预设--点击“覆盖原预设”按钮\n    ClickSmear = 'click_smear',\n    ClickSmearPreservation = 'click_smear_preservation',\n    ClickSmearCancel = 'click_smear_cancel',\n    ClickSmearClose = 'click_smear_close',\n    ClickSmearBack = 'click_smear_back',        //涂抹--撤回\n    ClickSmearReset = 'click_smear_reset',\n    ClickSmearHistoryBack = 'click_smear_history_back',\n    ClickHistory = 'smear_history',                      //历史记录项\n    ClickSmearTool = 'click_smear_tool',\n    DoubleClickDot = 'double_click_dot',               //双击滑杆回到初始值就统计\n    DoubleClickTitle = 'double_click_title',\n    PresetReset = 'preset_reset',\n    ParameterAdjustmentReset = 'parameter_adjustment_reset',\n    SelectIdPhotoBackground = 'select_idphoto_background', // 证件照换背景\n    SelectIdPhotoSize = 'select_idphoto_size', // 证件照裁剪尺寸\n    SelectChangeSky = 'select_change_sky',  //换天空\n    ModifyDPI = 'modify_dpi',\n    InitPreview = 'init_preview_all',\n    ClickPreview = 'click_preview_all',\n    ExitPreview = 'exit_preview_all',\n    FullEffectMode = 'full_effect_mode',\n    ColorMode = 'color_mode',\n\n    LiquefactionSize = 'liquefaction_size',\n    LiquefactionDensity = 'liquefaction_density',\n    LiquefactionPressure = 'liquefaction_pressure',\n    ClickLiquefactionFixedEdge = 'click_liquefaction_fixed_edge',\n}\n\n/**\n * 设置相关操作\n */\nexport enum PointSettingOperate {\n    ClickSetting = 'click_setting', // 点击设置图标\n    ClickClose = 'click_close',     // 点击右上角关闭图标\n    ClickReturn = 'click_return',   // 点击取消按钮\n    ClickConfirm = 'click_confirm'  // 点击确认按钮\n}\n\n/**\n * 帮助操作\n */\nexport enum PointHelpOperate {\n    HelpIcon = 'help_icon',                 // 点击帮助中心的图标\n    CustomerService = 'customer_service',   // 点击人工客服\n    TutorialGraphic = 'tutorial_graphic',   // 点击新手教程\n    TutorialVideo = 'tutorial_video',       // 点击视频教程 （2.8.0）\n    HelpQuestion = 'help_question',         // 点击常见问题 （2.8.0）\n    HotKey = 'hot_key'                      // 点击快捷键\n}\n\n/**\n * 滑竿数据手动修改操作\n */\nexport enum PointManualOperate {\n    clickEffectValue = 'click_effect_value',             // 点击数值进行手动修改完成\n}\n\n/**\n * 导出操作\n */\nexport enum PointExportOperate {\n    ExportButton = 'export_button',             // 点击导出图标\n    SelectPath = 'select_path',                 // 导出弹窗点击选择路径的文件夹图标\n    SelectPreset = 'select_preset',             // 导出弹窗点击选择预设图标\n    AdvancedSettings = 'advanced_settings',     // 导出弹窗点击高级设置\n    Cancel = 'cancel',                          // 导出弹窗点击取消\n    Confirm = 'confirm',                        // 导出弹窗点击导出按钮\n    OriginThumb = 'thumbnail_close_effect',     // 选中原图展示\n    EffectThumb = 'thumbnail_open_effect'       // 选中效果图展示\n\n}\n\n/**\n * 参数操作埋点\n */\nexport enum PointParamOperate {\n    SlideBeautyRod = 'slide_beauty_rod',     // 皮肤\n    SlideFaceliftRod = 'slide_facelift_rod', // 面部\n    SlideBodyRod = 'slide_body_rod',         // 全身\n    SlideEnhanceRod = 'slide_enhance_rod',   // 背景增强\n    SlideColorRod = 'slide_color_rod',       // 色彩\n    Facelift = 'facelift',                   // 切换脸型版本\n    MakeupSuit = 'slide_makeup_rod',         // 妆容\n    SliderBackground = 'slide_background_rod', // 背景调整\n    SlideRemoveDefects = 'slide_remove_defects',\n    SlideSkyAdjustmentRod = 'slide_sky_adjustment_rod',\n    SlideSkySceneryAdjustmentRod = 'slide_sky_scenery_adjustment_rod',\n    SlideSkyWaterAdjustmentRod = 'slide_sky_water_adjustment_rod',\n    SlideLiquefyRod = 'slide_liquefy_rod',\n}\n\nexport enum PointExportListOperate {\n    ExportedTab = 'exported_tab',\n    ExportingTab = 'exporting_tab',\n    BillingRulesPopup = 'billing_rules_popup',\n    DeleteBtn = 'click_delete_button',\n    RetryBtn = 'click_retry_button',\n    PauseBtn = 'click_pause_button',\n    StartBtn = 'click_start_button',\n    PauseAllBtn = 'pause_all',\n    StartAllBtn = 'start_all',\n    ClickExportDetail = 'click_export_detail',\n}\n\n/**\n * HSL 类型\n */\nexport const PointFeatureHslMap = {\n    [EffectParamEnum.EnhanceEditHSLHue]: 'hue',\n    [EffectParamEnum.EnhanceEditHSLLightness]: 'brightness',\n    [EffectParamEnum.EnhanceEditHSLSaturation]: 'saturation'\n}\n\n/**\n * HSL 色彩映射\n */\nexport const PointFeatureHslColorMap = {\n    [EffectParamHslColor.Red]: 'red',            // 红\n    [EffectParamHslColor.Orange]: 'orange',      // 橙\n    [EffectParamHslColor.Yellow]: 'yellow',      // 黄\n    [EffectParamHslColor.Green]: 'green',        // 绿\n    [EffectParamHslColor.Cyan]: 'lightgreen',    // 浅绿色\n    [EffectParamHslColor.Blue]: 'blue',          // 蓝\n    [EffectParamHslColor.Purple]: 'purple',      // 紫色\n    [EffectParamHslColor.Magenta]: 'magenta'    // 洋红\n}\n\nconst HslColorMerge = {}\nfor (const hsl in PointFeatureHslMap) {\n    for (const color in PointFeatureHslColorMap) {\n        // @ts-ignore\n        HslColorMerge[`${ hsl }_${ color }`] = `${ PointFeatureHslMap[hsl] }_${ PointFeatureHslColorMap[color] }`\n    }\n}\n\ntype IParamsValue = {\n    [p in EffectParamEnum]?: string | {\n        [v in number]: string\n    }\n}\n\ntype IParamsMap = {\n    [key in PointParamOperate]?: IParamsValue\n}\n\n/**\n * 调参\n * 参数映射表\n */\nexport const PointParamsFeatureMap: IParamsMap = {\n    slide_remove_defects: {\n        [EffectParamEnum.Spotless]: 'acne',\n        [EffectParamEnum.RemoveNevus]: 'mole',\n        [EffectParamEnum.SpotlessBody]: 'removal_body',\n        [EffectParamEnum.RemoveForeheadLines]: 'forehead_lines',\n        [EffectParamEnum.RemoveEyeLines]: 'eye_wrinkles',\n        [EffectParamEnum.LightenPouch]: 'darkcircles',\n        [EffectParamEnum.TearTrough]: 'wrinkle',\n        [EffectParamEnum.RemoveNeckLines]: 'neck_pattern',\n        [EffectParamEnum.RemoveDoubleChin]: 'face_doublechin'\n    },\n    // 皮肤调整\n    slide_beauty_rod: {\n        [EffectParamEnum.NeutralGrayRetouch]: 'dbsmooth',\n        [EffectParamEnum.MoisturizingSkin]: 'smooth_face',\n        [EffectParamEnum.MoisturizingSkinNoFace]: 'smooth_body',\n        [EffectParamEnum.FacialStereo3DLight]: 'highlight_contour',\n        [EffectParamEnum.FacialStereo3DShadow]: 'shadow_contour',\n        [EffectParamEnum.SkinColorLighten]: 'skin_bright',\n        [EffectParamEnum.SkinColorWhiten]: 'skin_whiten',\n        [EffectParamEnum.SkinColorRuddy]: 'skin_rosy',\n        [EffectParamEnum.SkinColorUniform]: 'skin_unite',\n        [EffectParamEnum.StretchMark]: 'stretch_marks',\n        [EffectParamEnum.StretchMarkLine]: 'pregnancy_line',\n        [EffectParamEnum.TeethWhiten]: 'whiten',\n        [EffectParamEnum.ToothRepairing]: 'teeth_fixer',\n        [EffectParamEnum.BrightEye]: 'bright',\n        [EffectParamEnum.MakeupEnhanceEye]: 'eye_enhance',\n        [EffectParamEnum.MakeupEnhanceMouth]: 'lip_enhance'\n    },\n    // 面部重塑\n    slide_facelift_rod: {\n        [EffectParamEnum.HeadNarrow]: 'face_size',\n        [EffectParamEnum.FaceLift]: 'face_cheeks',\n        [EffectParamEnum.FacialRefineSmallFace]: 'face_small',\n        [EffectParamEnum.FacialRefineTemple]: 'face_temple',\n        [EffectParamEnum.FacialRefineCheekBone]: 'face_cheekbones',\n        [EffectParamEnum.FaceWidth]: 'face_width',\n        [EffectParamEnum.FacialRefineJaw]: 'face_jaw',\n        [EffectParamEnum.FacialRefineChin]: 'face_chin',\n        [EffectParamEnum.FacialRefineHairLine]: 'face_forehead',\n        [EffectParamEnum.FacialRefineEyeZoom]: 'eyes_size',\n        [EffectParamEnum.FacialRefineEyeHigher]: 'eyes_height',\n        [EffectParamEnum.FacialRefineEyeWidth]: 'eyes_width',\n        [EffectParamEnum.FacialRefineEyeDistance]: 'eyes_distance',\n        [EffectParamEnum.FacialRefineEyeAngle]: 'eyes_tilt',\n        [EffectParamEnum.FacialRefineEyeUpDownAdjust]: 'eyes_position',\n        [EffectParamEnum.FacialRefineNose]: 'nose_size',\n        [EffectParamEnum.FacialRefineNoseHigher]: 'nose_lift',\n        [EffectParamEnum.FacialRefineNoseBridge]: 'nose_bright',\n        [EffectParamEnum.FacialRefineNoseAlar]: 'nose_wing',\n        [EffectParamEnum.FacialRefineNoseTip]: 'nose_tip',\n        [EffectParamEnum.FacialRefineMouthSize]: 'lips_size',\n        [EffectParamEnum.FacialRefineMouthWidth]: 'lips_width',\n        [EffectParamEnum.FacialRefineMouthHigher]: 'lips_height',\n        [EffectParamEnum.FacialRefineMouthUpperLip]: 'lips_upper',\n        [EffectParamEnum.FacialRefineMouthLowperLip]: 'lips_lower',\n        [EffectParamEnum.FacialRefineEyeBrowThickness]: 'eyebrows_thick',\n        [EffectParamEnum.FacialRefineEyeBrowDistance]: 'eyebrows_distance',\n        [EffectParamEnum.FacialRefineEyeBrowAngle]: 'eyebrows_tilt',\n        [EffectParamEnum.FacialRefineEyeBrowShape]: 'eyebrows_shape',\n        [EffectParamEnum.FacialRefineEyeBrowHigher]: 'eyebrows_position',\n\n        [EffectParamEnum.LeftFaceLift]: 'face_cheeks_left',\n        [EffectParamEnum.RightFaceLift]: 'face_cheeks_right',\n        [EffectParamEnum.LeftTemple]: 'face_temple_left',\n        [EffectParamEnum.RightTemple]: 'face_temple_right',\n        [EffectParamEnum.RightTemple]: 'face_temple_right',\n        [EffectParamEnum.LeftCheekBone]: 'face_cheekbones_left',\n        [EffectParamEnum.RightCheekBone]: 'face_cheekbones_right',\n        [EffectParamEnum.LeftJaw]: 'face_jaw_left',\n        [EffectParamEnum.RightJaw]: 'face_jaw_right',\n        [EffectParamEnum.LeftEyeZoom]: 'eyes_size_left',\n        [EffectParamEnum.RightEyeZoom]: 'eyes_size_right',\n        [EffectParamEnum.LeftEyeHigher]: 'eyes_height_left',\n        [EffectParamEnum.RightEyeHigher]: 'eyes_height_right',\n        [EffectParamEnum.LeftEyeWidth]: 'eyes_width_left',\n        [EffectParamEnum.RightEyeWidth]: 'eyes_width_right',\n        [EffectParamEnum.LeftEyeDistance]: 'eyes_distance_left',\n        [EffectParamEnum.RightEyeDistance]: 'eyes_distance_right',\n        [EffectParamEnum.LeftEyeAngle]: 'eyes_tilt_left',\n        [EffectParamEnum.RightEyeAngle]: 'eyes_tilt_right',\n        [EffectParamEnum.LeftEyeUpDownAdjust]: 'eyes_position_left',\n        [EffectParamEnum.RightEyeUpDownAdjust]: 'eyes_position_right',\n        [EffectParamEnum.LeftEyeBrowThickness]: 'eyebrows_thick_left',\n        [EffectParamEnum.RightEyeBrowThickness]: 'eyebrows_thick_right',\n        [EffectParamEnum.LeftEyeBrowDistance]: 'eyebrows_distance_left',\n        [EffectParamEnum.RightEyeBrowDistance]: 'eyebrows_distance_right',\n        [EffectParamEnum.LeftEyeBrowAngle]: 'eyebrows_tilt_left',\n        [EffectParamEnum.RightEyeBrowAngle]: 'eyebrows_tilt_right',\n        [EffectParamEnum.LeftEyeBrowShape]: 'eyebrows_shape_left',\n        [EffectParamEnum.RightEyeBrowShape]: 'eyebrows_shape_right',\n        [EffectParamEnum.LeftEyeBrowHigher]: 'eyebrows_position_left',\n        [EffectParamEnum.RightEyeBrowHigher]: 'eyebrows_position_right',\n\n        [EffectParamEnum.SymmetryReshapeSwitch]: 'symmetry_facelift',\n        [EffectParamEnum.SymmetryReshapeBody]: 'symmetry_upper_body',\n        [EffectParamEnum.SymmetryReshapeFace]: 'symmetry_facial_features'\n    },\n    // 全身美型\n    slide_body_rod: {\n        [EffectParamEnum.AIBodyReshape]: 'body_ai',\n        [EffectParamEnum.PoseRefineSlimHand]: 'arm',\n        [EffectParamEnum.PoseRefineSlimWaist]: 'waist',\n        [EffectParamEnum.PoseRefineSlimLeg]: 'leg',\n        [EffectParamEnum.PoseRefineEnhanceBreast]: 'breast',\n        [EffectParamEnum.PoseRefineNiceButtock]: 'buttocks',\n        [EffectParamEnum.PoseRefineSlim]: 'Slim',\n        [EffectParamEnum.PoseRefineShrinkHead]: 'head',\n        [EffectParamEnum.PoseRefineLengthen]: 'stretch',\n        [EffectParamEnum.PoseRefineHeighten]: 'heighten',\n        [EffectParamEnum.PoseRefineSlimLeftNeck]: 'thin_neck_left',\n        [EffectParamEnum.PoseRefineSlimRightNeck]: 'thin_neck_right',\n        [EffectParamEnum.PoseRefineSlimNeck]: 'thin_neck'\n    },\n\n    // 调色\n    slide_color_rod: {\n        [EffectParamEnum.FilterAlpha]: 'filter',                    // （滤镜）\n        [EffectParamEnum.EnhanceEditColorTemperature]: 'temp',      // （色温）\n        [EffectParamEnum.EnhanceEditHue]: 'tone',                   // （色调）\n        [EffectParamEnum.EnhanceEditExposure]: 'exposure',          // （曝光）\n        [EffectParamEnum.EnhanceEditContrast]: 'contrast',          // （对比度）\n        [EffectParamEnum.EnhanceEditHighlight]: 'highlight',        // （高光）\n        [EffectParamEnum.EnhanceEditShadow]: 'shadow',              // （阴影）\n        [EffectParamEnum.EnhanceEditWhite]: 'white',                // （白色）\n        [EffectParamEnum.EnhanceEditBlack]: 'black',                // （黑色）\n        [EffectParamEnum.EnhanceEditCameraRawSharpen]: 'clarity',   // （清晰度）\n        [EffectParamEnum.EnhanceEditCameraRawVibrance]: 'vividness',// （鲜艳度）\n        [EffectParamEnum.EnhanceEditSaturation]: 'saturation',      // （饱和度）\n        [EffectParamEnum.EnhanceEditCRDBStrength]: 'sharpen',       // （锐化）\n        [EffectParamEnum.EnhanceEditCRDBRadius]: 'radius',          // （半径）\n        [EffectParamEnum.EnhanceEditCRDBDetail]: 'detail',          // （细节）\n        ...HslColorMerge // HSL 合并参数\n    },\n\n    // 妆容\n    slide_makeup_rod: {\n        [EffectParamEnum.SuitMakeup]: 'theme',                // （妆容）\n        [EffectParamEnum.EyebrowMakeup]: 'eyebrows',          //  眉毛\n        [EffectParamEnum.EyeMakeup]: 'eyes',                  //  眼妆\n        [EffectParamEnum.EyelashMakeup]: 'eyelashes',         //  眼睫毛\n        [EffectParamEnum.BlusherMakeup]: 'blush',             //  腮红\n        [EffectParamEnum.LipMakeup]: 'lipstick'              //  唇妆\n    },\n\n    // 背景调整\n    slide_background_rod: {\n        [EffectParamEnum.BgCleanSwitch]: {\n            0: 'close_background_blemishes',\n            1: 'open_background_blemishes'\n        },\n        [EffectParamEnum.BgCleanMode]: {\n            0: 'none_pure_background',\n            1: 'pure_background'\n        },\n        [EffectParamEnum.BgCleanMooreSwitch]: {\n            0: 'close_background_banding',\n            1: 'open_background_banding'\n        },\n        [EffectParamEnum.BgCleanMooreMode]: {\n            0: 'banding_none_pure_background',\n            1: 'banding_pure_background'\n        },\n        [EffectParamEnum.BackgroundEnhance]: 'background_enhance',\n        [EffectParamEnum.BgReplaceGamma]: 'idphoto_edge_detail',    // （证件照换背景边缘调整）\n        [EffectParamEnum.BgReplaceBeta]: 'idphoto_edge_burr'\n    },\n\n    //换天空相关埋点\n    slide_sky_adjustment_rod: {\n        [EffectParamEnum.SkyChoose]: 'sky_choose',\n        [EffectParamEnum.SkyEdgeTransition]: 'sky_edge_transition',\n        [EffectParamEnum.SkyTemp]: 'sky_temp',\n        [EffectParamEnum.SkySaturation]: 'sky_saturation',                        //饱和度\n        [EffectParamEnum.SkyBrightness]: 'sky_brightness',                                 //亮度\n        [EffectParamEnum.SkyVague]: 'sky_vague',                                  //虚化\n        [EffectParamEnum.SkyFlip]: 'sky_flip'                                     //水平翻转天空\n    },\n\n    slide_sky_scenery_adjustment_rod: {\n        [EffectParamEnum.SkySceneryColor]: 'sky_scenery_color',                        //景物色彩（偏向天空)\n        [EffectParamEnum.SkyCharacterColor]: 'sky_character_color',            //人物色彩（偏向天空）\n    },\n\n    slide_sky_water_adjustment_rod:{\n        [EffectParamEnum.SkyWaterReflex]: 'sky_water_reflex',              //景物反射\n        [EffectParamEnum.SkyWaterVague]: 'sky_water_vague'\n    }\n\n}\n\nexport const MakeUpTabClickMap: { [key: string]: string } = {\n    [EffectParamEnum.SuitMakeup]: 'click_theme_tab',                // （妆容）\n    [EffectParamEnum.EyebrowMakeup]: 'click_eyebrows_tab',          //  眉毛\n    [EffectParamEnum.EyeMakeup]: 'click_eyes_tab',                  //  眼妆\n    [EffectParamEnum.EyelashMakeup]: 'click_eyelashes_tab',         //  眼睫毛\n    [EffectParamEnum.BlusherMakeup]: 'click_blush_tab',             //  腮红\n    [EffectParamEnum.LipMakeup]: 'click_lipstick_tab'              //  唇妆\n}\n\nexport const MakeUpSuitClickMap:{ [key: string]: string } = {\n    [EffectParamEnum.SuitMakeup]: 'click_theme',                // （妆容）\n    [EffectParamEnum.EyebrowMakeup]: 'click_eyebrows',          //  眉毛\n    [EffectParamEnum.EyeMakeup]: 'click_eyes',                  //  眼妆\n    [EffectParamEnum.EyelashMakeup]: 'click_eyelashes',         //  眼睫毛\n    [EffectParamEnum.BlusherMakeup]: 'click_blush',             //  腮红\n    [EffectParamEnum.LipMakeup]: 'click_lipstick'              //  唇妆\n}\n","export class IpcNotifyEvent {\n    eventId: string\n    eventList: Map<Symbol, Function> = new Map<Symbol, Function>()\n\n    constructor(eventId: string) {\n        this.eventId = eventId\n    }\n\n    /**\n     * 回调事件\n     * @param data\n     * @private\n     */\n    private _callback(data: any): void {\n        this.eventList.forEach((callback) => {\n            callback(data)\n        })\n    }\n\n    /**\n     * 分发回调事件\n     * @param data\n     */\n    distributeCallBack(data: any): void {\n        this._callback(data)\n    }\n\n    /**\n     * 初始化 QT 事件广播监听\n     */\n    // private initListener() {\n    //   window.addEventListener(this.eventId, this._callback)\n    // }\n\n    /**\n     * 销毁 QT 事件广播监听\n     */\n    // destroy() {\n    //   window.removeEventListener(this.eventId, this._callback)\n    // }\n\n    /**\n     * 监听广播\n     * @param symbol\n     * @param callback\n     */\n    set(symbol: Symbol, callback: Function): void {\n        // if (this.eventList.size === 0) {\n        //   this.initListener()\n        // }\n\n        this.eventList.set(symbol, callback)\n    }\n\n    has(symbol: Symbol): void {\n        this.eventList.has(symbol)\n    }\n\n    clear(): void {\n        this.eventList.clear()\n        // this.destroy()\n    }\n\n    delete(identify: Symbol | Function, isSymbol: boolean = false): void {\n        let symbol: Symbol | null = null\n\n        if (isSymbol) {\n            symbol = identify as Symbol\n        } else {\n            this.eventList.forEach((callback, key) => {\n                if (callback === identify) {\n                    symbol = key\n                }\n            })\n        }\n\n        if (!symbol) {\n            return\n        }\n\n        if (this.eventList.has(symbol)) {\n            this.eventList.delete(symbol)\n        }\n\n        if (this.eventList.size === 0) {\n            // this.destroy()\n        }\n    }\n\n}\n\nexport class IpcBase<T> {\n    ipcHandler:T|null = null\n    public register(ipcHandler:any){\n        this.ipcHandler = ipcHandler\n    }\n}\n\nexport class IpcBaseEasy<T> extends IpcBase<T>{\n    notifyEventPool: Map<string, IpcNotifyEvent> = new Map()\n    applyMessageReceived(eventId:string,data:any) {\n        if (this.notifyEventPool.has(eventId)) {\n            const broadcast = this.notifyEventPool.get(eventId)\n            broadcast?.distributeCallBack(data)\n        }\n    }\n\n    /**\n     * 监听事件\n     * @param eventId\n     * @param callback\n     */\n    addListener(eventId: string, callback: Function): Symbol {\n        const symbol = Symbol()\n        if (!this.notifyEventPool.has(eventId)) {\n            const notifyEvent = new IpcNotifyEvent(eventId)\n            this.notifyEventPool.set(eventId, notifyEvent)\n        }\n\n        const notifyEventPool = this.notifyEventPool.get(eventId)\n        notifyEventPool?.set(symbol, callback)\n        return symbol\n    }\n\n    /**\n     * 移除事件\n     * @param eventId\n     * @param identify\n     * @param isSymbol\n     */\n    removeListener(eventId: string, identify: Symbol | Function, isSymbol: boolean = false): void {\n        if (this.notifyEventPool.has(eventId)) {\n            const notifyEventPool = this.notifyEventPool.get(eventId)\n            notifyEventPool?.delete(identify, isSymbol)\n        }\n    }\n\n    /**\n     * 清空事件下的监听\n     * @param eventId\n     */\n    clearListener(eventId: string): void {\n        if (this.notifyEventPool.has(eventId)) {\n            this.notifyEventPool.get(eventId)?.clear()\n        }\n    }\n\n    /**\n     * 清空所有监听事件\n     */\n    clearAll(): void {\n        this.notifyEventPool.forEach(notifyEventPool => {\n            notifyEventPool.clear()\n        })\n        this.notifyEventPool.clear()\n    }\n}"],"sourceRoot":""}