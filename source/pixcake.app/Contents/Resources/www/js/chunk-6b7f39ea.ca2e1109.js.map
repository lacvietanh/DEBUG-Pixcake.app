{"version":3,"sources":["webpack:///./src/views/BatchRetouch/BatchRetouch.vue?a711","webpack:///./src/utils/tsImageIOManager.js","webpack:///./src/views/BatchRetouch/BatchRetouch.vue","webpack:///./src/views/BatchRetouch/Palette/BatchPalette.vue","webpack:///./src/views/BatchRetouch/Palette/config/paletteParamLayout.js","webpack:///./src/components/StepControl/TSParamStepControl.vue","webpack:///src/components/StepControl/TSParamStepControl.vue","webpack:///./src/components/StepControl/TSParamStepControl.vue?67d8","webpack:///./src/components/StepControl/TSParamStepControl.vue?2d18","webpack:///./src/model/UserPreferenceSettingModel.ts","webpack:///src/views/BatchRetouch/Palette/BatchPalette.vue","webpack:///./src/views/BatchRetouch/Palette/BatchPalette.vue?3549","webpack:///./src/views/BatchRetouch/Palette/BatchPalette.vue?7a42","webpack:///./src/mixins/thumbnail/batchDeleteMixin.ts","webpack:///src/views/BatchRetouch/BatchRetouch.vue","webpack:///./src/views/BatchRetouch/BatchRetouch.vue?a48e","webpack:///./src/views/BatchRetouch/BatchRetouch.vue?3f3b","webpack:///./src/components/StepControl/TSParamStepControl.vue?0ab9","webpack:///./src/views/BatchRetouch/Palette/BatchPalette.vue?062d"],"names":["TSImageIOManager","constructor","this","_instance","imageIoQueue","Map","imageViewModelQueue","imageDataQueue","renderImageDataQue","_thumbnailWidth","qrcEngineMap","errorHandle","successHandle","render","_vm","_c","_self","_setupProxy","staticClass","on","$event","preventDefault","stopPropagation","onDropHanlder","_v","_s","editCount","totalCount","attrs","onListStyleChanged","model","value","isList","callback","$$v","expression","$getIconPath","class","isSelect","isSelectedAll","staticStyle","onSelectedAllClick","cancelBlur","onSelectFavouriteClick","isSelectedFavourite","ref","selectionImageType","recommendPreItems","myRecommendSelectIndex","myPreItems","myCurPresetSelectIndex","histogramData","onAddPresettingClick","onPresetMenuRightClick","onReminderPreItemClick","onStepChange","onResetPaletteCallback","slot","chartData","imageInfo","importProgress","status","myImportName","handleCancelImport","showImportProgress","deleteProgress","showDeleteProgress","staticRenderFns","onTopCollapseChanged","activeNames","_t","handlResetPreset","handleAddPreset","onApplyPresetClick","showImportPresetDialog","loadPreset","showNewPresetTypeDialog","defaultSingleRatio","defaultDoubleRatio","paletteParamLayout","whiteBalanceParamCfg","singleStepLen","dbStepLen","singleRatio","doubleRatio","colorParamCfg","enable","onDbLeftClick","apply","arguments","onLeftClick","onRightClick","onDbRightClick","INITClick","DbLeftClick","LeftClick","RightClick","DbRightClick","name","data","pMaxValue","pDoubleStepLen","pSingleStepLen","clickTimer","counter","stepStyle","computed","watch","maxValue","handler","immediate","doubleStepLen","floatValue","props","addtionObject","methods","notifyStepChanged","dispatchClickEvent","clearTimeout","step","isDbClick","createClickTimer","component","UserPreferenceSettingModel","ret","localStorage","get","parseFloat","val","set","chartTitleHeight","presetTitleHeight","mixins","button","toast","presetManager","components","Split","TSPresetTree","TSParamStepControl","type","default","imageType","setup","PointPreset","PointBatchPalette","enableStepControl","paletteLayout","splitManualVal","splitVal","splitMinVal","splitMaxVal","presetHeight","isFirstTime","bottomRef","userPreferModel","beforeDestroy","onResizeEvent","listenResizeEvent","window","histogramHeight","console","calcPresetHeight","calcMiniSplitValue","getActiveNames","handleSetCheckedNodes","getThumnailView","getTemperatureColorStepRef","menu","label","action","disabled","push","show","defineComponent","deleteProgressDialog","useBatchDeleteRepositories","mounted","BatchPalette","Histogram","ImportProgressDialog","thumbnail","tsFileImport","pointsMixin","batchDeleteMixin","defaultGridColumn","columns","activeName","lrEdgePadding","listScrollTop","singleScrollTop","imageOriPresetMap","isOnLoadPreset","curPresetId","isDestroy","galleryUUID","loadingEl","reminderPresetSelectIndex","myPresetSelectIndex","recommendPaletteSelectIndex","needRefreshOptStatus","iBatchUpdateListener","createScene","hanlderExportClick","needCreateMainFragment","canDestroy","isShowingImportDialog","$route","listViewHeight","listViewH","content","itemList","columList","index","myRecommendPaletteSelectIndex","thumbnailRef","onEchartDataUpdate","cake_operate","onCommandLeftMouseClick","id","isInGallery","projectId","leftListPadding","right","top","left","bottom","leftListMargin","result","gallery","tab","isFromRefineTab","refineOrGalleryUUID","presetSuitId","presetId","palettePresetId","presetItem","applyEffect","showLoading","makeOptStatusChanged","path","query","arrayObj","thumbIt","thumbData","title","message","showCancelButton","then","_","catch","onMyPreItemClick","cake_id","onHandleEmptytedThumbnail","params","onSelectionChangedCallback","presetSuit","onRecvThumbnailExtraInfo","hisData","red","green","blue","onEditedCount","findPresetSuitIndex","recommendIndex","myPresetIndex","changeListStyle","listenWhenAppQuit","ipcRenderer","routerPushPhotoFinishing","thumbView","imgPath","imgIndex","registerExportClickListener","eventBus","notifySelectedIndexChanged","logGaEvent","EnhanceEditColorTemperature","EnhanceEditHue","EnhanceEditExposure","EnhanceEditContrast","EnhanceEditHighlight","EnhanceEditShadow","EnhanceEditWhite","EnhanceEditBlack","EnhanceEditCameraRawSharpen","EnhanceEditSaturation","cake_feature","nextStep","temp","copyMap","viewMd","thumbnailIds","paletteIds","viewModelKeys","dbKey","ids","updateKeys","keys","resetIds","tempPaletteVmInstance","imageIo","properties","filters","extensions","progress","paths","setNeedCreateMainFragmentTag","beforeCreate","beforeRouteEnter","next","vm","hasSelectedFavorites","MemoryMonitor","eventbus","ShortcutHelper","userId","res","e"],"mappings":"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AC,yBACA,uDAEAC,sBACA,sBAGA,mBAGA,iBACAC,8BACA,mBAEA,2BACA,KACA,uBACA,OACAC,uBACAC,KACA,MAEA,OACAD,sBACAC,KACA,MAEA,OACAD,uBACAC,KACA,MAEA,OACAD,sBACAC,KACA,MAGA,iBACA,yCACA,iBAGAC,6BACA,qBACA,gCACA,4BACA,OAIAlC,gBACA,2BACA,iBACA,eACA,yBAGAG,cACA,2BACA,iBACA,eACA,yBAEAC,eACA,2BACA,iBACA,eACA,yBAEAC,iBACA,2BACA,iBACA,eACA,2BCvL2W,I,wBCQvW8B,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,wDCdT,MAAOC,EACsB,kCAC3B,IAAIC,QAAYC,OAAaC,IAAI,+BAIjC,MAHY,cAARF,GAA+B,OAARA,IACvBA,EAAMG,WAAWH,IAEdA,EAGoB,gCAACI,SACtBH,OAAaI,IAAI,8BAA+BD,GAGrB,wCACjC,IAAIJ,QAAYC,OAAaC,IAAI,gCAIjC,MAHY,cAARF,GAA+B,OAARA,IACvBA,EAAMG,WAAWH,IAEdA,EAG0B,sCAACI,SAC5BH,OAAaI,IAAI,+BAAgCD,I,wCCuH/D,MAAME,EAAmB,KACnBC,EAAoB,KAEX,mCAAgB,CAC/BjC,oBACAkC,QACAC,OACAC,OACAC,QAEAC,YACAC,aACAC,oBACAC,qBACA,2BAEA1B,OAEAlE,wBACAC,wBACA4F,qBACAC,YAEA3F,wBACA0F,qBACAC,YAGA5F,iBACAE,eACAyF,YACAC,UACA,cAGAC,WACAF,cACAC,YAGAE,QACA,kBAAAC,oBAAAC,GAAA,iBACA,OACAD,cACAC,sBAGA9C,OACA,OACA+C,qBACAxE,0BACAE,2BAEAuE,qBACA9E,kCAGA+E,kBACAC,YACAC,gBACAC,gBACAC,eACAC,iBAGA9C,OACAmC,WACAjC,sBACA,oBACA,iCAGAC,cAEAzC,aACAwC,sBACA,oBACA,gCACA,uBACA,mBACA,iHACA,qBAEA,uBAGAC,cAEAuC,UACAxC,sBACA,2BACA,IAGA6C,cACA,0BAEA5C,cAEAsC,kBACA,YACAO,sCAEAxG,iBACA,oBACA,kCAIAuD,aACA,gBACA,kBAGA,gBACA,4BACA,oBACA,4BAEAkD,gBACA,4BAEAzC,YACA,0BACA,8BAEA0C,gBACA,oBACA,2BAGAC,qBACA,EACAC,qDAEAA,yDAGA,qBACA,YACA,4CACA,IACA,gBACA,uBAEA,0BACA,yBAEA3F,wBACA,oBACA,uBACA,gCACA,uBACA,mBACA,iHACA,qBAEA,0BACA,oBACA,2BAGA4F,kBACA,2BACA,MACA,SAEA,sDAEA,OADAC,0CACA,GAEAC,mBACA,8BACA,MACA,SAEA,uCACA,yCAEA,6BACA,wBACA,qBAEAC,qBACA,6CACA,4CACA,iCACA,WACA,QACA,kCACA,kBACA,mBACA,+DAGA,6CACA,sBACA,gBAEA,mCAGA,IACA,kBAGA,qBAKAC,iBACA,6DACA,oDAIA,iBAHA,KAEA,MACA,uBACA,KACA,mBAEA,+BANA,WASAC,yBACA,KACA,uDAEA,qDAGA9F,mBACA,0DACA,2BAEA,sDAGA+F,kBACA,sCAEAC,6BACA,0CAGA,sCAFA,MAIA9F,sBAEA,kCACA,6BAEA,6BAGA,4BACA,0CAEA,wBACA,0CAEA,mBACA+F,QACAC,aACAC,uCACAC,YACAxE,UACAlE,8CACA2I,KAAA,CACAH,aACAC,wCACAC,YACAxE,UACAlE,cACA,gCACA,gDAEA4I,WCvaoX,ICQhX,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,2NCfAC,gCAAgB,CAC3BtC,WAAY,CACR,yBAA0BuC,SAE9BhC,QACI,OAAOiC,mBAEX7E,OACI,MAAO,IAGXiC,OAAQ,GAER1B,SAAU,GAEVS,QAAS,GAET8D,c,uCCkHW,gCAAgB,CAC/B/E,oBACAsC,YACA0C,eACAC,iBACAC,6BAEAhD,QACAE,OACAD,OACAgD,OACAC,OACA/C,OACAgD,QACAC,IAEArF,OACA,OACAsF,oBACAC,UACAC,gCACA3J,WACAO,iBACAK,uBACAjB,aACAiK,kBACAC,gBACAC,kBAEAC,0BACAC,kBACAvC,eACAwC,iBACAC,aACAC,eACAC,eAEAC,4BACAC,sBACAC,+BACApJ,iBACAqJ,wBACAC,0BACAC,iCACAC,wBACAjL,YACAoB,gCAEA8J,0BACAC,cAEAC,2BAGAnG,OACAoG,YAGArG,aACA,gBACA,iBAGA,0BACA,gBACA,uBAGA,4BACA,gBACA,sBACA,eAGAsG,iBACA,uBAEA,OADAC,eACA,GAEAlK,oBACA,QACA,iDACA,yCACAmK,gBACA,SACA,KACA,IACA,gBACA,cACA,IACAC,KACAC,WAEAD,UACAE,IAEA,UAEApK,aACA,SACA,wCACA,KACA,KACA,IACA,gBACA,cACA,IACAkK,KACAC,WAEAD,UACAE,IAEA,UAEArK,yBACA,uCAEAE,yBACA,iCAEAoK,gCACA,0CAGAnG,YACA,gBACA,2BACA,kBACA,kBACA,eACA,2BAGA,4BACA,uBACA,sBACA,sBAGA,4BACA,sBACA,2BACA,sBACA,oBACA,qCAGA,6BACA,4BACA,+BACA,6BACA,4BAGA,0BACA,4BACA,6BAEA,gBACA,0BAGAoG,eACA,gCAGAC,0BACA,mCACAC,4BAEAxD,4CACA,oBACAvG,cACA,GAEAC,cACA,KAKA+J,6BAKA,mBACA,IAEA,SAAAC,OAAAzH,GAAA,mBAIA,OACA0H,eACAC,YACAC,iBACAC,yBACAC,MACAC,wBACAC,UAEAC,gBACAJ,UACAC,OACAC,OACAC,YAIA,KAEAE,EADA,kCACAA,uCACAC,UACAC,2BAGAF,+BAEA,+BACA,4BACAG,mBACAC,uCAGA,kEACAJ,eACAA,mBACA,GACA,4BAEA,mBACA,SACAnE,kCACA,qBAKA,6BACA,sBAEA,OACAwE,kBACAC,4BACAC,mCAGA,8DAEA,IACA,iBACAC,yEAIAC,kBACAR,4CAEAS,cACAT,iDAEAU,uBACA,2BAGAV,gDAIAjL,wBACA,iDACA,sBAKA,YAJA,mBACA4L,sBACAC,WAIA,oBACAC,wBACA,sCAEA,WACA,iBACA,oBACAC,OACA,MAGA,UACAA,WAGA,oBACA,aACAC,uCACAA,iCACAA,8BAEA,+CAGA,yBACA,aACAnF,qBACAA,mCAEA,4BACA,gBACAoF,aACAC,4BACAC,sBACAC,KAAAC,OACAC,MAAAD,QAKA,6BACA,iCAEA,4BACA,mBACA,4BACA,qBACA,uBACA,iCACA,oCACA,6BAEA,iCACA,iCAIAnM,0BACA,8BACA,uCACA,kCAGAqM,oBACA,8BACA,mCACAlC,+BACAmC,kBAEA,iCACA,uBAEA,qBACA,qBACA,0CAEA,uBACA,mCACAnC,wBAEA,0CAKA,gCACA,WACA,qDACA,aACA2B,uCACAA,iCACAA,8BAEA,+CAEA,2BAEA,uCACA,mBACA,mCACA3B,4BAGA,mCACAA,oCAGA,0DAKAoC,4BACA,mBACAb,mBACAc,eAIAC,kCAEA,GADA9F,6GACA,EAGA,OAFA,sCACA,4BAIA,kEACA+F,eACAA,mBAEA,4BACA,qCAGAC,4BACA,SACA,YACAC,GACAC,mDACAC,yDACAC,wDAGA,gDAGAC,mBACA,iBACA,mBAGAC,uBAKA,GAJA,sDAEA,iCACA,2BACA,mBACA,OAGA,qDACA,yCACArD,gBAEA,SACA,KACA,iBAEA,GADAG,IACA,SACAmD,IACA,MAGA,QAGA,OAFA,sCACA,4BAIAtD,wCACAG,KACA,SACA,iBAEA,GADAA,IACA,SACAoD,IACA,MAGA,2BACA,kCAEA,+BACA,mDACA,yBACA,mCACAhD,6BAGA,mCACAA,qCAGA,sEAEA5L,sBACA,wBACA,uDACA,mCACA4L,kBAIAiD,mBACA,OACArC,6CAEAA,8CAKAsC,oBACAC,+BAGA,gBACAvB,aACAC,yBACAC,sBACAC,KAAAC,UAOAoB,gCACA,kBACA,0BACA,GACAC,8BAEA9Q,wCACAA,2CAEA,0BACA+Q,4BACAC,aAGA,mBACAhC,sBACAC,YAGAgC,8BACA,gCACA5C,gDAEA6C,qDAGAC,+BAeAC,cACA,WACA,GACAC,mCACAC,sBACAC,+BACAC,+BACAC,iCACAC,2BACAC,yBACAC,yBACAC,sCACAC,mCAEA9J,WACA,mCACAyF,kCACAsE,kBAIA,wBACA,8BACA,sDACA,sBACA,kCAGA,iCACA,2BAEA,eAEA,GADA,oCACA,4CAEA,IACA,gCACAC,QAEA,SACA,KACA,KACA,gBAGA,gBACA,WACA,OACA,oBACA,mBAAAvD,kBAAAE,GAAA,iBAGA,sBACA,aACA,iBACAsD,UACAC,gBAEAA,aAGAC,4CACAC,4BAIAD,mBACAA,yBAEA,qBACAE,UACAC,WAEArI,2CAUA,GANA,gBACA,mCAGA,mBAEA,eACA,qBACA,6BACA,gCAAAoI,aAAAE,QAAAP,WAAAM,kBAGA,eACA,oCACAE,MACAC,4BACAtM,MACAsI,8BAKA,oCACA,6BAIA,gCACA,8BACA,iDACA,sCAEA,qBAEA,gBACA,KACA,KACA,SAEA,gBACA,WACA,OACA,SACA,oBACA0D,mBACAA,yBAEA,mBAAA1D,kBAAAE,GAAA,iBAGA,sBACA,aACA,iBACAsD,UACAC,gBAEAA,aAGAC,4CACAC,4BAGAM,UACAC,WAIA,gBACA,mCAGA,eACA,oCACAH,MACAC,4BACAtM,MACAsI,8BAMA,uCACA,wCACAmE,kBAEA,6DACA,mCACAJ,MACArM,OACAuM,SAGA,iCACA,2BAEA,mBACA,oCACA,6BAGA,sCACA,iDACA,sCACA,gBACA,WACA,OACA,oBACA,4CACA,SAEA,MACA,2BACA,eACA,GACAG,oBAMA,GACA,qBAIA,wBAEA,GADA5I,yBACA,2BACA,OAEA,8BACA,gBACA,0BACA6I,aACAC,UACA7M,cACA8M,2CAGA,yCAEA,YADA,+BAGA,uDAEA,2BACA,oCAEA,+BAEA,2BACA,6CACA,4BAKA,mCACA3E,mDACA,eACAiB,wBAEA2D,IACA,0BACA,4BAEA,wBAEA,0CAfA,oCAkBA,uBACA,0BACA,KACA,gBACA,aACAC,gBAEA,2BAEAC,kCACA,uCACA,+BAEA,gCAGA,uBAEA,MADAlJ,0DAEA,kCACArC,4DACA,6CAIAA,sDAEAqC,uDAGAmJ,iBAEAC,wBACAC,MACAC,gCACAA,uCAGA,8BACA,uBAIA,sBACA,oBAEA,oBACA,gBACAlE,aACAC,yBACAC,sBACAC,KAAAC,IACA6D,MAIAA,KAhBArJ,qCAkBA,gBACA,mBACAoE,wCACA,kBAAA9L,uBAAAiR,GAAA,EACA,qBACA,6BAEAnF,8EACAA,yEACAA,wDACAA,4DACAA,uDACAA,8EAEAoF,wCAEA,gHACA,eACAnE,6DAGAoE,8DACAC,iDACA,uBACAA,0CACA,KAEAD,uEACA,6BACA,KAEAA,6DACA,oBACA,mBACA,KACA,oBAEA,oCAEA,qBACA,CACAE,WAEApE,KAAAqE,OACAnE,MAAAoE,IACA,eACAlL,aACA0G,sBAIA,UACA,kBACA,SACArF,kCAGA,+BACA,IACA+G,4BACA,kCAIApH,gBACA,kBACA,yBACAsH,qDAEAwC,qCACAA,yCACAA,wCAEArF,wCACAA,iDACAA,6CACAA,0CACAA,4CACAA,uCACAA,4CACAA,sDC1jCqW,MCQjW,I,UAAY,eACd,GACAxN,EACAsD,GACA,EACA,KACA,WACA,OAIa,gB,2CCnBf,W,kCCAA,W","file":"js/chunk-6b7f39ea.ca2e1109.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchRetouch.vue?vue&type=style&index=0&id=4b4eafab&prod&lang=scss&scoped=true&\"","export class TSImageIOManager {\n\n    constructor() {\n        this._instance = null\n        this.imageIoQueue = new Map()\n        this.imageViewModelQueue = new Map()\n        this.imageDataQueue = new Map()\n        this.renderImageDataQue = new Map() // 仅缓存一张效果图\n        this._thumbnailWidth = 0 // 缩略图尺寸的大小\n        this.qrcEngineMap = new Map()\n        this.errorHandle = null // 引擎初始化失败\n        this.successHandle = null // 引擎初始化成功\n    }\n\n    static shareInstance() {\n        if (!this._instance) {\n            this._instance = new TSImageIOManager()\n        }\n        return this._instance\n    }\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"claBatchRetouch\"},[_c('div',{staticClass:\"claLeft\",on:{\"drop\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onDropHanlder($event)},\"dragover\":function($event){$event.preventDefault();$event.stopPropagation();},\"dragenter\":function($event){$event.preventDefault();$event.stopPropagation();}}},[_c('div',{staticClass:\"claThumbnailList\"}),_c('div',{staticClass:\"claBottom\"},[_c('div',{staticClass:\"claEditedCount\"},[_c('span',[_vm._v(_vm._s(`已修:${_vm.editCount}张 总计:${_vm.totalCount}张`))])]),_c('el-radio-group',{staticClass:\"claListSwitch\",attrs:{\"size\":\"mini\"},on:{\"change\":_vm.onListStyleChanged},model:{value:(_vm.isList),callback:function ($$v) {_vm.isList=$$v},expression:\"isList\"}},[_c('el-radio-button',{attrs:{\"label\":1,\"border\":\"\"}},[(_vm.isList === 1)?_c('img',{attrs:{\"src\":_vm.$getIconPath('toolbar_button_all@3x.png')}}):_c('img',{attrs:{\"src\":_vm.$getIconPath('toolbar_button_all@3x.png')}})]),_c('el-radio-button',{attrs:{\"label\":2,\"border\":\"\"}},[(_vm.isList === 2)?_c('img',{attrs:{\"src\":_vm.$getIconPath('toolbar_button_all_one@3x.png')}}):_c('img',{attrs:{\"src\":_vm.$getIconPath('toolbar_button_all_one@3x.png')}})])],1),_c('el-button',{class:{ isSelect: _vm.isSelectedAll },staticStyle:{\"width\":\"80px\"},attrs:{\"plain\":\"\",\"size\":\"mini\"},on:{\"click\":function($event){[_vm.onSelectedAllClick(), _vm.cancelBlur($event)]}}},[_vm._v(\" \"+_vm._s(_vm.isSelectedAll ? '取消全选' : '全选')+\" \")]),_c('el-button',{staticClass:\"claSelectFavouriteAll\",attrs:{\"plain\":\"\",\"size\":\"mini\"},on:{\"click\":function($event){[_vm.onSelectFavouriteClick(), _vm.cancelBlur($event)]}}},[_vm._v(\" \"+_vm._s(`${_vm.isSelectedFavourite ? '取消选中星标' : '选中星标图片'}`)+\" \")])],1)]),_c('BatchPalette',{ref:\"paletteViewRef\",attrs:{\"image-type\":_vm.selectionImageType,\"recommendPreItems\":_vm.recommendPreItems,\"myRecommendSelectIndex\":_vm.myRecommendSelectIndex,\"myPreItems\":_vm.myPreItems,\"myCurPresetSelectIndex\":_vm.myCurPresetSelectIndex,\"histogramData\":_vm.histogramData},on:{\"onAddPresetCallBack\":_vm.onAddPresettingClick,\"onNativeRightClick\":_vm.onPresetMenuRightClick,\"onItemClick\":_vm.onReminderPreItemClick,\"onStepChange\":_vm.onStepChange,\"onResetClick\":_vm.onResetPaletteCallback}},[_c('template',{slot:\"histogram\"},[_c('Histogram',{ref:\"tsHistogram\",attrs:{\"chartData\":_vm.histogramData.chartData || {},\"imageInfo\":_vm.histogramData.imageInfo || {}}})],1)],2),_c('importProgressDialog',{attrs:{\"status\":_vm.importProgress.status,\"data\":_vm.importProgress,\"importName\":_vm.myImportName},on:{\"onCancelled\":_vm.handleCancelImport},model:{value:(_vm.showImportProgress),callback:function ($$v) {_vm.showImportProgress=$$v},expression:\"showImportProgress\"}}),_c('delete-progress-dialog',{attrs:{\"status\":_vm.deleteProgress.status,\"data\":_vm.deleteProgress},model:{value:(_vm.showDeleteProgress),callback:function ($$v) {_vm.showDeleteProgress=$$v},expression:\"showDeleteProgress\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{ref:\"paramsComRef\",staticClass:\"claRight global__params-bar\"},[_c('div',{staticClass:\"border-style claHistogramCollapse global__scroll-style\",staticStyle:{\"border-top-width\":\"0px\"},attrs:{\"slot\":\"top\"},slot:\"top\"},[_c('el-collapse',{staticClass:\"collapse\",on:{\"change\":_vm.onTopCollapseChanged},model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},[_c('el-collapse-item',{ref:\"histogram\",attrs:{\"title\":\"直方图\",\"name\":\"histogram\"}},[_vm._t(\"histogram\")],2),_c('el-collapse-item',{ref:\"recommend\",attrs:{\"title\":\"推荐预设\",\"name\":\"preset\"}},[_c('template',{slot:\"title\"},[_c('div',{staticClass:\"claWtBlanceTitle\"},[_c('span',{staticClass:\"claTitle\"},[_vm._v(\"预设\")]),_c('div',[_c('el-button',{staticClass:\"addBtnCla\",attrs:{\"circle\":\"\",\"icon\":\"el-icon-refresh-left\"},on:{\"click\":function($event){$event.stopPropagation();[_vm.handlResetPreset(), _vm.cancelBlur($event)]}}}),_c('el-button',{staticClass:\"addBtnCla\",staticStyle:{\"margin-right\":\"10px\"},attrs:{\"circle\":\"\",\"icon\":\"el-icon-circle-plus-outline\"},on:{\"click\":function($event){$event.stopPropagation();[_vm.handleAddPreset(), _vm.cancelBlur($event)]}}})],1)])]),_c('TSPresetTree',{ref:\"tSPresetTree\",on:{\"onItemClick\":_vm.onApplyPresetClick}})],2)],1)],1),_c('ImportPresetDialog',{model:{value:(_vm.showImportPresetDialog),callback:function ($$v) {_vm.showImportPresetDialog=$$v},expression:\"showImportPresetDialog\"}}),_c('NewPresetTypeDialog',{on:{\"loadPreset\":_vm.loadPreset},model:{value:(_vm.showNewPresetTypeDialog),callback:function ($$v) {_vm.showNewPresetTypeDialog=$$v},expression:\"showNewPresetTypeDialog\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const defaultSingleRatio = 5 / 200\nconst defaultDoubleRatio = 10 / 200\n\nexport const paletteParamLayout = {\n    whiteBalanceParamCfg: [\n        {\n            'label': '色温',\n            'key': 'EnhanceEditColorTemperatureRelative', // 0.025 五步到达最大\n            'alias': 'EnhanceEditColorTemperature',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio / 2,\n            doubleRatio: defaultDoubleRatio / 2\n        },\n        {\n            'label': '色调',\n            'key': 'EnhanceEditHueRelative',  // 0.0125 五步到达最大\n            'alias': 'EnhanceEditHue',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio / 2,\n            doubleRatio: defaultDoubleRatio / 2\n        }\n    ],\n    colorParamCfg: [\n        {\n            'label': '曝光度',\n            'key': 'EnhanceEditExposure',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: 6 / 200,\n            doubleRatio: 10 / 200\n        },\n        {\n            'label': '对比度',\n            'key': 'EnhanceEditContrast',\n            // 是否展示此处底部的分割线\n            'showSeparatorLine': true,\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '高光',\n            'key': 'EnhanceEditHighlight',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '阴影',\n            'key': 'EnhanceEditShadow',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '白色',\n            'key': 'EnhanceEditWhite',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '黑色',\n            'key': 'EnhanceEditBlack',\n            'showSeparatorLine': true,\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '清晰度',\n            'key': 'EnhanceEditCameraRawSharpen',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '鲜艳度',\n            'key': 'EnhanceEditCameraRawVibrance',\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        },\n        {\n            'label': '饱和度',\n            'key': 'EnhanceEditSaturation',\n            'showSeparatorLine': true,\n            singleStepLen: 1,\n            dbStepLen: 2,\n            singleRatio: defaultSingleRatio,\n            doubleRatio: defaultDoubleRatio\n        }\n    ]\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"claStepControl\"},[_c('div',{class:{\n            'claQuickNarrowLeft': true,\n            'claHover': _vm.enable,\n            'claDisable': !_vm.enable,\n            'icon-btn-hover':_vm.enable\n        },on:{\"click\":function($event){$event.stopPropagation();return _vm.onDbLeftClick.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\"})]),_c('div',{class:{\n            'claNarrowLeft': true,\n            'claHover': _vm.enable,\n            'claDisable': !_vm.enable,\n            'icon-btn-hover':_vm.enable\n        },on:{\"click\":function($event){$event.stopPropagation();return _vm.onLeftClick.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-arrow-left\"})]),_c('div',{class:{\n            'claNarrowRight': true,\n            'claHover': _vm.enable,\n            'claDisable': !_vm.enable,\n            'icon-btn-hover':_vm.enable\n        },on:{\"click\":function($event){$event.stopPropagation();return _vm.onRightClick.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-arrow-right\"})]),_c('div',{class:{\n            'claQuickNarrowRight': true,\n            'claHover': _vm.enable,\n            'claDisable': !_vm.enable,\n            'icon-btn-hover':_vm.enable\n        },on:{\"click\":function($event){$event.stopPropagation();return _vm.onDbRightClick.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-d-arrow-right\"})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"claStepControl\">\n        <div\n            :class=\"{\n                'claQuickNarrowLeft': true,\n                'claHover': enable,\n                'claDisable': !enable,\n                'icon-btn-hover':enable\n            }\"\n            @click.stop=\"onDbLeftClick\">\n            <i class=\"el-icon-d-arrow-left\"></i>\n        </div>\n\n        <div\n            :class=\"{\n                'claNarrowLeft': true,\n                'claHover': enable,\n                'claDisable': !enable,\n                'icon-btn-hover':enable\n            }\"\n            @click.stop=\"onLeftClick\">\n            <i class=\"el-icon-arrow-left\"></i>\n        </div>\n\n        <div\n            :class=\"{\n                'claNarrowRight': true,\n                'claHover': enable,\n                'claDisable': !enable,\n                'icon-btn-hover':enable\n            }\"\n            @click.stop=\"onRightClick\">\n            <i class=\"el-icon-arrow-right\"></i>\n        </div>\n\n        <div\n            :class=\"{\n                'claQuickNarrowRight': true,\n                'claHover': enable,\n                'claDisable': !enable,\n                'icon-btn-hover':enable\n            }\"\n            @click.stop=\"onDbRightClick\">\n            <i class=\"el-icon-d-arrow-right\"></i>\n        </div>\n    </div>\n</template>\n\n<script>\nconst INITClick = 0\nconst DbLeftClick = 1\nconst LeftClick = 2\nconst RightClick = 3\nconst DbRightClick = 4\nexport default {\n    name: 'TSParamStepControl',\n    data() {\n        return {\n            pMaxValue: 100,\n            pDoubleStepLen: 5,\n            pSingleStepLen: 1,\n            clickTimer: -1,\n            counter: 0,\n            stepStyle: INITClick\n        }\n    },\n    computed: {},\n    watch: {\n        maxValue: {\n            handler: function (val, oldVal) {\n                if (val) {\n                    this.pMaxValue = val\n                }\n            },\n            immediate: true\n        },\n        doubleStepLen: {\n            handler: function (val, oldVal) {\n                if (val) {\n                    this.pDoubleStepLen = val\n                }\n            },\n            immediate: true\n        },\n        singleStepLen: {\n            handler: function (val, oldVal) {\n                if (val) {\n                    this.pSingleStepLen = val\n                }\n            },\n            immediate: true\n        },\n        floatValue: {\n            handler: function (val, oldVal) {\n                if (val) {\n                    this.pIntValue = this.pMaxValue * val\n                }\n            },\n            immediate: true\n        }\n    },\n    props: {\n        maxValue: Number, // 传整型值, 100,200这样的\n        doubleStepLen: Number, // 双击步长5\n        singleStepLen: Number,  // 当点步长1\n        enable: Boolean,\n        addtionObject: Object\n    },\n    methods: {\n        notifyStepChanged(step, isDbClick, counter) {\n            this.$emit('onStepChange', [step, isDbClick, this.addtionObject, counter])\n        },\n        dispatchClickEvent(clickStyle) {\n            if (this.stepStyle == INITClick) {\n                return\n            }\n            if (this.stepStyle == clickStyle) {\n                return\n            }\n            if (this.clickTimer) {\n                clearTimeout(this.clickTimer)\n                this.clickTimer = -1\n\n                let step = -this.pDoubleStepLen\n                let isDbClick = false\n                switch (this.stepStyle) {\n                    case DbLeftClick: {\n                        step = -this.pDoubleStepLen\n                        isDbClick = true\n                        break\n                    }\n                    case DbRightClick: {\n                        step = this.pDoubleStepLen\n                        isDbClick = true\n                        break\n                    }\n                    case LeftClick: {\n                        step = -this.pSingleStepLen\n                        isDbClick = false\n                        break\n                    }\n                    case RightClick: {\n                        step = this.pSingleStepLen\n                        isDbClick = false\n                        break\n                    }\n                }\n                this.stepStyle = clickStyle\n                this.notifyStepChanged(step, isDbClick, this.counter)\n                this.counter = 0\n            }\n        },\n        createClickTimer: function () {\n            if (this.clickTimer == -1) {\n                this.clickTimer = setTimeout(() => {\n                    this.dispatchClickEvent(INITClick)\n                }, 1000)\n            }\n        },\n\n        onDbLeftClick() {\n            this.dispatchClickEvent(DbLeftClick)\n            this.stepStyle = DbLeftClick\n            this.counter++\n            this.createClickTimer()\n        },\n\n        onLeftClick() {\n            this.dispatchClickEvent(LeftClick)\n            this.stepStyle = LeftClick\n            this.counter++\n            this.createClickTimer()\n        },\n        onRightClick() {\n            this.dispatchClickEvent(RightClick)\n            this.stepStyle = RightClick\n            this.counter++\n            this.createClickTimer()\n        },\n        onDbRightClick() {\n            this.dispatchClickEvent(DbRightClick)\n            this.stepStyle = DbRightClick\n            this.counter++\n            this.createClickTimer()\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n$quickNarrowWidth: 48px;\n$narrowWidth: 48px;\n$width: 192px;\n$height: 22px;\n$narrowFontSize: 12px;\n$narrowColor: #999999;\n$speratorLineBorder: 0.5px solid #4E4E4E;\n\n.claStepControl {\n    height: $height;\n    line-height: $height;\n    background: #393939;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    display: flex;\n    flex-direction: row;\n    text-align: center;\n    overflow: hidden;\n\n    i {\n        color: $narrowColor;\n        font-size: $narrowFontSize;\n    }\n\n    .claDisable {\n        background: #4D4D4D;\n        pointer-events: none;\n    }\n\n    .claQuickNarrowLeft {\n        width: $quickNarrowWidth;\n        pointer-events: auto;\n    }\n\n    .claNarrowLeft {\n        width: $narrowWidth;\n        border-left: $speratorLineBorder;\n        pointer-events: auto;\n    }\n\n    .claNarrowRight {\n        width: $narrowWidth;\n        border-left: $speratorLineBorder;\n        pointer-events: auto;\n\n        /deep/ .el-icon-arrow-right {\n            font-size: 13px;\n        }\n    }\n\n    .claQuickNarrowRight {\n        width: $quickNarrowWidth;\n        border-left: $speratorLineBorder;\n        pointer-events: auto;\n    }\n\n    .claHover:hover {\n        cursor: pointer;\n    }\n\n    .claHover:active {\n        background: rgba(0, 0, 0, 0.4);\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSParamStepControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSParamStepControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TSParamStepControl.vue?vue&type=template&id=528a5392&scoped=true&\"\nimport script from \"./TSParamStepControl.vue?vue&type=script&lang=js&\"\nexport * from \"./TSParamStepControl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TSParamStepControl.vue?vue&type=style&index=0&id=528a5392&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"528a5392\",\n  null\n  \n)\n\nexport default component.exports","/*\n    用户偏好设置\n */\nimport localStorage from '@/utils/locs'\n\nexport class UserPreferenceSettingModel {\n    async getRefineParamsSplitValue(): Promise<number> {\n        let ret = await localStorage.get('refineRightParamsSplitValue')\n        if (ret !== 'undefined' && ret !== null) {\n            ret = parseFloat(ret)\n        }\n        return ret\n    }\n\n    async setRefineParamsSplitValue(val: number) {\n        await localStorage.set('refineRightParamsSplitValue', val)\n    }\n\n    async getBatchRetouchParamsSplitValue(): Promise<number> {\n        let ret = await localStorage.get('batchRetouchParamsSplitValue')\n        if (ret !== 'undefined' && ret !== null) {\n            ret = parseFloat(ret)\n        }\n        return ret\n    }\n\n    async setBatchRetouchParamsSplitValue(val: number) {\n        await localStorage.set('batchRetouchParamsSplitValue', val)\n    }\n}\n","<template>\n    <div class=\"claRight global__params-bar\" ref=\"paramsComRef\">\n<!--        <split @on-move-end=\"splitManualVal = splitVal\" v-model=\"splitVal\" mode=\"vertical\" :min=\"`${splitMinVal}px`\"-->\n<!--               :max=\"`${splitMaxVal}px`\">-->\n<!--            <div slot=\"trigger\" class=\"splitTriggle\">-->\n<!--                <div class=\"triggleContent\"></div>-->\n<!--            </div>-->\n            <div slot=\"top\" class=\"border-style claHistogramCollapse global__scroll-style\"\n                 style=\"border-top-width: 0px;\">\n                <el-collapse v-model=\"activeNames\" class=\"collapse\" @change=\"onTopCollapseChanged\">\n                    <el-collapse-item title=\"直方图\" name=\"histogram\" ref=\"histogram\">\n                        <slot name=\"histogram\"></slot>\n\n                    </el-collapse-item>\n                    <el-collapse-item title=\"推荐预设\" name=\"preset\" ref=\"recommend\">\n                        <template slot=\"title\">\n                            <div class=\"claWtBlanceTitle\">\n                                <span class=\"claTitle\">预设</span>\n                                <div>\n                                    <el-button\n                                        circle\n                                        class=\"addBtnCla\"\n                                        icon=\"el-icon-refresh-left\"\n                                        @click.stop=\"[handlResetPreset(), cancelBlur($event)]\">\n                                    </el-button>\n                                    <el-button\n                                        circle\n                                        style=\"margin-right:10px\"\n                                        class=\"addBtnCla\"\n                                        icon=\"el-icon-circle-plus-outline\"\n                                        @click.stop=\"[handleAddPreset(), cancelBlur($event)]\">\n                                    </el-button>\n                                </div>\n                            </div>\n                        </template>\n                      <TSPresetTree\n                          ref=\"tSPresetTree\"\n                          @onItemClick=\"onApplyPresetClick\"\n                      >\n                      </TSPresetTree>\n\n<!--                        <TSPresetTree-->\n<!--                            :height=\"`${presetHeight}px`\"-->\n<!--                            ref=\"tSPresetTree\"-->\n<!--                            @onItemClick=\"onApplyPresetClick\"-->\n<!--                        >-->\n<!--                        </TSPresetTree>-->\n                    </el-collapse-item>\n                </el-collapse>\n            </div>\n<!--            <div slot=\"bottom\" class=\"border-style claCollapse global__scroll-style\"-->\n<!--                 style=\"border-top-width: 0px;height: 100%;\" ref=\"bottomRef\">-->\n<!--                <el-collapse v-model=\"activeNames\" class=\"collapse\">-->\n<!--                    <el-collapse-item title=\"白平衡\" name=\"1\" ref=\"wtBlanceRef\">-->\n<!--                        <template slot=\"title\">-->\n<!--                            <div class=\"claWtBlanceTitle\">-->\n<!--                                <span class=\"claTitle\">白平衡</span>-->\n<!--                                &lt;!&ndash;                            <span v-if=\"$platform === 'win32'\" class=\"betaStyle\">测试版</span>&ndash;&gt;-->\n<!--                                <el-button-->\n<!--                                    class=\"claReset icon-btn-hover\" icon=\"el-icon-refresh-right\"-->\n<!--                                    @click.stop=\"$emit('onResetClick',paletteLayout.whiteBalanceParamCfg)\">-->\n<!--                                </el-button>-->\n<!--                            </div>-->\n<!--                        </template>-->\n\n<!--                        <div class=\"claStepList\">-->\n<!--                            <div :class=\"{claStepItem:true}\" v-for=\"(it,index) in paletteLayout.whiteBalanceParamCfg\"-->\n<!--                                 :key=\"index\">-->\n<!--                            <span class=\"claStepTitle\">-->\n<!--                                {{ it.label }}-->\n<!--                            </span>-->\n<!--                                <TSParamStepControl-->\n<!--                                    :addtionObject=\"it\"-->\n<!--                                    :single-step-len=\"it.singleStepLen\"-->\n<!--                                    :double-step-len=\"it.dbStepLen\"-->\n<!--                                    :enable=\"enableStepControl\"-->\n<!--                                    @onStepChange=\"$emit('onStepChange',$event)\"-->\n<!--                                >-->\n<!--                                </TSParamStepControl>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </el-collapse-item>-->\n<!--                    <el-collapse-item title=\"色调控制\" name=\"2\">-->\n\n<!--                        <template slot=\"title\">-->\n<!--                            <div class=\"claColorTitle\">-->\n<!--                                <span class=\"claTitle\">色调控制</span>-->\n<!--                                &lt;!&ndash;                            <span v-if=\"$platform === 'win32'\" class=\"betaStyle\">测试版</span>&ndash;&gt;-->\n<!--                                <el-button-->\n<!--                                    class=\"claReset icon-btn-hover\"-->\n<!--                                    icon=\"el-icon-refresh-right\"-->\n<!--                                    @click.stop=\"[_SetLastProjectUpdateTime(new Date()),$emit('onResetClick',paletteLayout.colorParamCfg)]\">-->\n<!--                                </el-button>-->\n<!--                            </div>-->\n<!--                        </template>-->\n\n<!--                        <div class=\"claStepList\">-->\n<!--                            <div-->\n<!--                                v-for=\"(it,index) in paletteLayout.colorParamCfg\"-->\n<!--                                :key=\"index\"-->\n<!--                                :class=\"{claStepItem:true}\"-->\n<!--                                :style=\"{marginBottom:it.showSeparatorLine?'12px':'0px'}\">-->\n\n<!--                                <span class=\"claStepTitle\">{{ it.label }}</span>-->\n\n<!--                                <TSParamStepControl-->\n<!--                                    :addtionObject=\"it\"-->\n<!--                                    :single-step-len=\"it.singleStepLen\"-->\n<!--                                    :double-step-len=\"it.dbStepLen\"-->\n<!--                                    :enable=\"enableStepControl\"-->\n<!--                                    @onStepChange=\"[_SetLastProjectUpdateTime(new Date()),$emit('onStepChange',$event)]\"-->\n<!--                                >-->\n<!--                                </TSParamStepControl>-->\n\n<!--                                <el-divider v-if=\"it.showSeparatorLine\" class=\"bottomBorder\"></el-divider>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </el-collapse-item>-->\n<!--                </el-collapse>-->\n<!--            </div>-->\n<!--        </split>-->\n        <ImportPresetDialog v-model=\"showImportPresetDialog\"></ImportPresetDialog>\n        <NewPresetTypeDialog @loadPreset=\"loadPreset\" v-model=\"showNewPresetTypeDialog\"></NewPresetTypeDialog>\n    </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\n\nimport TSPresetTree from '@/components/PresetTree/TSPresetTree'\nimport { mapGetters } from 'vuex'\nimport button from '@/mixins/button'\nimport toast from '@/mixins/toast'\nimport presetManager from '@/mixins/presetManager.js'\n\nimport { paletteParamLayout } from '@/views/BatchRetouch/Palette/config/paletteParamLayout'\nimport TSParamStepControl from '@/components/StepControl/TSParamStepControl'\nimport { Divider } from 'element-ui'\nimport { mapActions, mapMutations } from 'vuex'\nimport { ImageType, PresetClassifyType } from '@/universal/types/constants'\nimport Split from '@/components/SplitView/split'\nimport { UserPreferenceSettingModel } from '@/model/UserPreferenceSettingModel'\nimport Menu from '@/qt-ipc/utils/menu'\nimport {PointRefineOperate} from \"@/constants/pointsDef\";\nimport useParamsPointsRepositories from '@/composables/points/useParamsPointsRepositories'\n\nconst chartTitleHeight = 38.5\nconst presetTitleHeight = 38.5\n\nexport default defineComponent({\n    name: 'BatchPalette',\n    mixins: [\n        button,\n        toast,\n        presetManager\n    ],\n    components: {\n        Split,\n        TSPresetTree,\n        TSParamStepControl,\n        'el-divider': Divider\n    },\n    props: {\n        // 预设组件相关的传参\n        recommendPreItems: Array,\n        myRecommendSelectIndex: {\n            type: [Number, String],\n            default: -1\n        },\n        myCurPresetSelectIndex: {\n            type: [Number, String],\n            default: -1\n        },\n        // 我的预设\n        myPreItems: Array,\n        histogramData: {\n            type: Object,\n            default() {\n                return null\n            }\n        },\n        imageType: {\n            type: [Number],\n            default: 0\n        }\n    },\n    setup() {\n        const { PointPreset, PointBatchPalette } = useParamsPointsRepositories()\n        return {\n            PointPreset,\n            PointBatchPalette\n        }\n    },\n    data() {\n        return {\n            enableStepControl: true,\n            showImportPresetDialog: false,\n            showNewPresetTypeDialog: false,\n\n            paletteLayout: { ...paletteParamLayout },\n            activeNames: ['1', '2', 'histogram'],\n\n            // 参数分割标记值\n            splitManualVal: 0.3, // 手动拖动时的值\n            splitVal: 0.3,\n            splitMinVal: 270,\n            splitMaxVal: 122,\n            presetHeight: 0,\n            isFirstTime: true //组件是否加载了\n        }\n    },\n    watch: {\n        imageType: {\n            handler: function (val, old) {\n                this.$nextTick(() => {\n                    this.calcMiniSplitValue(null)\n                })\n            },\n            immediate: true\n        },\n        activeNames: {\n            handler: function (val, old) {\n                this.$nextTick(() => {\n                    const histogram_status = val.includes('histogram')\n                    const preset_status = val.includes('preset')\n                    if (!this.isFirstTime) {\n                        this.$store.commit('changeActionStatus_batchRetouch', [histogram_status ? 'batchRetouch_histogram' : '', preset_status ? 'batchRetouch_preset' : ''])\n                        this.isPresetShow = preset_status\n                    }\n                    this.isFirstTime = false\n                })\n            },\n            immediate: false\n        },\n        splitVal: {\n            handler: function (val, old) {\n                let bottomRef = this.$refs.bottomRef\n                if (!bottomRef) {\n                    return\n                }\n                bottomRef.scrollTop = 0\n                this.calcPresetHeight()\n            },\n            immediate: false\n        },\n        splitManualVal(val) {\n            let userPreferModel = new UserPreferenceSettingModel()\n            userPreferModel.setBatchRetouchParamsSplitValue(val)\n        },\n        histogramData(val) {\n            this.$nextTick(() => {\n                this.calcMiniSplitValue(null)\n            })\n        }\n    },\n    computed: {\n        ...mapGetters([\n            'actionStatus'\n        ])\n    },\n    async mounted() {\n        this.getActiveNames()\n        await this.initSplitVal()\n        this.listenResizeEvent(true)\n    },\n    beforeDestroy() {\n        this.listenResizeEvent(false)\n    },\n    methods: {\n        ...mapMutations('project', [\n            '_SetLastProjectUpdateTime'\n        ]),\n        onResizeEvent() {\n            this.$nextTick(() => {\n                this.calcPresetHeight()\n            })\n        },\n        listenResizeEvent(isNeed) {\n            if (isNeed) {\n                window.addEventListener('resize', this.onResizeEvent)\n            } else {\n                window.removeEventListener('resize', this.onResizeEvent)\n            }\n        },\n        async initSplitVal() {\n            let userPreferModel = new UserPreferenceSettingModel()\n            let val = await userPreferModel.getBatchRetouchParamsSplitValue()\n            if (val) {\n                this.splitVal = val\n                this.splitManualVal = val\n            }\n            this.calcMiniSplitValue()\n            this.calcPresetHeight()\n        },\n        onTopCollapseChanged(activeNames) {\n            this.$nextTick(() => {\n                let val = this.activeNames\n                const histogram_status = val.includes('histogram')\n                const preset_status = val.includes('preset')\n                if (!this.isFirstTime) {\n                    this.$store.commit('changeActionStatus_batchRetouch', [histogram_status ? 'batchRetouch_histogram' : '', preset_status ? 'batchRetouch_preset' : ''])\n                    this.isPresetShow = preset_status\n                }\n                this.calcMiniSplitValue()\n                this.isFirstTime = false\n                this.calcPresetHeight()\n            })\n        },\n        histogramHeight() {\n            let histogramRef = this.$refs.histogram\n            if (!histogramRef) {\n                return 0\n            }\n            const tsHistogramH = this.$refs.histogram.$children[0].getHeight()\n            console.log(`histogramHeight.build = ${tsHistogramH}`)\n            return tsHistogramH\n        },\n        calcPresetHeight() {\n            let paramsComRef = this.$refs.paramsComRef // 根组件包含的参数面板,已扣除底部button区高度\n            if (!paramsComRef) {\n                return 0\n            }\n            let rootHeight = paramsComRef.getBoundingClientRect().height\n            let isChartExpand = this.activeNames.includes('histogram')\n\n            let chartHeight = isChartExpand ? this.histogramHeight() : 0\n            let height = rootHeight * this.splitVal - chartHeight - chartTitleHeight - presetTitleHeight\n            this.presetHeight = height\n        },\n        calcMiniSplitValue() {\n            let isChartExpand = this.activeNames.includes('histogram')\n            const isPresetExpand = this.activeNames.includes('preset')\n            let chartHeight = isChartExpand ? this.histogramHeight() : 0\n            const presetItemHeight = 35\n            const keepItemCount = isPresetExpand ? 3 : 0\n            const adjustH = this.imageType == ImageType.Raw ? 40 : 0\n            let miniSplitVal = chartHeight + chartTitleHeight + presetTitleHeight + presetItemHeight * keepItemCount + adjustH\n            this.splitMinVal = miniSplitVal\n            let ratio = miniSplitVal / this.$refs.paramsComRef.getBoundingClientRect().height\n\n            // 展开、收起，修改分割比例值\n            if (this.$refs.paramsComRef && !this.isFirstTime) {\n                if (this.splitManualVal < ratio) {\n                    this.splitVal = ratio\n                } else {\n                    this.splitVal = this.splitManualVal\n                }\n            }\n            if (!isPresetExpand) {\n                this.splitVal = ratio\n            }\n        },\n        async loadPreset() {\n        },\n        /**\n         * 获取直方图和预设的展开状态\n         */\n        getActiveNames() {\n            const isHistogram = this.actionStatus.includes('batchRetouch_histogram')\n            const isPreset = this.actionStatus.includes('batchRetouch_preset')\n            if (!isHistogram && !isPreset) {\n                this.activeNames = ['1', '2']\n            } else if (isHistogram && !isPreset) {\n                this.activeNames = ['1', '2', 'histogram']\n            } else if (!isHistogram && isPreset) {\n                this.activeNames = ['1', '2', 'preset']\n            } else {\n                this.activeNames = ['1', '2', 'histogram', 'preset']\n            }\n        },\n        handleSetCheckedNodes(index) {\n            if (index == 0) {\n                this.$refs['tSPresetTree'].handleSetCheckedNodes(null)\n            } else {\n                this.$refs['tSPresetTree'].handleSetCheckedNodes(index)\n            }\n        },\n        handlResetPreset() {\n            const oriPreset = new Array(this.$store.state.presetting.oriPreset)\n            this.onApplyPresetClick(oriPreset)\n\n            this.$refs['tSPresetTree'].handleSetCheckedNodes(-1)\n\n        },\n        getThumnailView() {\n            return this.$refs.thumbnailRef || null\n        },\n        getTemperatureColorStepRef() {\n            if (!this.$refs.temperatureColorStepRef) {\n                return null\n            }\n            return this.$refs.temperatureColorStepRef[0]\n        },\n        onApplyPresetClick(data) {\n\n            if (data[0].classifyType === PresetClassifyType.System) {\n                this.PointPreset(true,data[0].id)\n            } else {\n                this.PointPreset(false,data[0].id)\n            }\n\n            this.$emit('onItemClick', data)\n            this._SetLastProjectUpdateTime(new Date())\n        },\n        async handleAddPreset() {\n            this.PointBatchPalette('add_preset_icon')\n\n            const menu = new Menu()\n            menu.push({\n                label: '导入预设',\n                action: 'batchretouch-my-preset-import',\n                disabled: false,\n                data: null,\n                callback: () => this.showImportPresetDialog = true\n            }).push({\n                label: '新建分类',\n                action: 'batchretouch-my-preset-newType',\n                disabled: false,\n                data: null,\n                callback: () => {\n                    this.showNewPresetTypeDialog = true\n                    this.PointBatchPalette(PointRefineOperate.AddPresetSort)\n                }\n            }).show()\n        }\n    }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n\n.claRight {\n    position: relative;\n    width: 300px;\n    height: calc(100% - 48px);\n    box-shadow: 0 -8px 14px 0px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n\n    .splitTriggle {\n        height: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        margin-top: -5px;\n\n        .triggleContent {\n            width: 100%;\n            height: 1px;\n            background-color: #333;\n        }\n\n        &:hover {\n            cursor: row-resize;\n\n            .triggleContent {\n                height: 2px;\n                background-color: #ffffff20;\n            }\n        }\n    }\n\n    .claCarouse {\n        background-color: #282828;\n    }\n\n    .claCarouselNoneIndicator {\n        /deep/ .el-carousel__indicators {\n            visibility: hidden;\n            background-color: #282828;\n        }\n    }\n\n    .claCarouselIndicator {\n        /deep/ .el-carousel__indicators {\n            visibility: visible;\n            height: 28px;\n            margin-top: -10px;\n        }\n\n    }\n\n    .claHistogramCollapse {\n        padding-left: 0;\n        font-size: 12px;\n        overflow-y: overlay;\n\n        .collapse {\n            /deep/ {\n                .el-collapse-item__header {\n                    padding-left: 12px;\n                    padding-right: 8px;\n\t\t\t\t\tborder-bottom: solid 1px #333;\n                }\n\n                .el-collapse-item:last-child {\n                    .el-collapse-item__wrap {\n                        border-bottom: none;\n                    }\n                }\n\n                .el-collapse-item__content {\n                    padding-bottom: 0;\n                }\n            }\n        }\n\n    }\n\n\n    .claCollapse {\n        padding-left: 0;\n        font-size: 12px;\n        flex: 1;\n        overflow-y: overlay;\n\n        .collapse {\n            /deep/ {\n                .el-collapse-item__header {\n                    padding-left: 12px;\n                    padding-right: 8px;\n                }\n\n                .el-collapse-item:last-child {\n                    .el-collapse-item__wrap {\n                        border-bottom: none;\n                    }\n                }\n\n                .el-collapse-item__content {\n                    padding-bottom: 0;\n                }\n            }\n        }\n    }\n\n    .claColorTitle, .claWtBlanceTitle {\n        width: 100%;\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        .addBtnCla {\n            align-self: center;\n            background: transparent;\n            border-color: transparent;\n            font-size: 16px;\n            width: 30px;\n        }\n\n        .betaStyle {\n            display: inline-block;\n            width: 38px;\n            height: 16px;\n            border-radius: 2px;\n            background: rgba(255, 255, 255, 0.70);\n            border: 0.5px solid #9A9494;\n            font-size: 9px;\n            box-sizing: border-box;\n            color: #333333;\n            text-align: center;\n            line-height: 14px;\n            margin-left: 6px;\n            vertical-align: middle;\n        }\n\n        .claTitle {\n            font-size: 12px;\n            line-height: 14px;\n            font-weight: 500;\n            height: 100%;\n            display: inline-block;\n            vertical-align: middle;\n        }\n\n        .claReset {\n            position: absolute;\n            top: 50%;\n            margin-top: -16px;\n            right: 12px;\n            padding: 0px;\n            border-width: 0px;\n            width: 32px;\n            height: 32px;\n            font-size: 14px;\n            background: transparent;\n            color: #B3B3B3;\n\n            /deep/ i {\n                font-size: 12px;\n            }\n        }\n    }\n\n    .claStepList {\n        display: flex;\n        flex-direction: column;\n        padding-top: 6px;\n        padding-bottom: 6px;\n\n        .claStepItem {\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            padding-right: 16px;\n            height: 34px;\n            align-items: center;\n            position: relative;\n\n            .claStepTitle {\n                text-align: left;\n                margin-left: 12px;\n                margin-right: 4px;\n                font-size: 12px;\n                line-height: 24px;\n                font-weight: 400;\n                width: 36px;\n                color: #A6A6A6;\n            }\n\n            .bottomBorder {\n                background-color: #333333;\n                position: absolute;\n                margin-left: 12px;\n                margin-right: 100px;\n                bottom: -6px;\n                width: calc(100% - 24px);\n            }\n        }\n\n        .claStepItem:nth-last-child(1) {\n            .bottomBorder {\n                display: none;\n            }\n        }\n    }\n}\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchPalette.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchPalette.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BatchPalette.vue?vue&type=template&id=1153dd53&scoped=true&\"\nimport script from \"./BatchPalette.vue?vue&type=script&lang=js&\"\nexport * from \"./BatchPalette.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BatchPalette.vue?vue&type=style&index=0&id=1153dd53&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1153dd53\",\n  null\n  \n)\n\nexport default component.exports","import { defineComponent } from 'vue'\nimport deleteProgressDialog from '@/views/BatchRetouch/components/deleteProgressDialog.vue'\nimport useBatchDeleteRepositories, { IRepositories } from '@/composables/business/useBatchDeleteRepositories'\n\nexport default defineComponent({\n    components: {\n        'delete-progress-dialog': deleteProgressDialog\n    },\n    setup(): IRepositories {\n        return useBatchDeleteRepositories()\n    },\n    data() {\n        return {\n        }\n    },\n    mixins: [\n    ],\n    computed: {\n    },\n    methods: {\n    },\n    mounted() {\n    }\n})\n","<template>\n    <div class=\"claBatchRetouch\">\n        <div class=\"claLeft\"\n             @drop.prevent.stop=\"onDropHanlder($event)\"\n             @dragover.prevent.stop @dragenter.prevent.stop\n        >\n\n            <div class=\"claThumbnailList\">\n            </div>\n\n            <div class=\"claBottom\">\n                <div class=\"claEditedCount\">\n                    <span>{{ `已修:${editCount}张  总计:${totalCount}张` }}</span>\n                </div>\n                <el-radio-group\n                    size=\"mini\"\n                    class=\"claListSwitch\"\n                    v-model=\"isList\"\n                    @change=\"onListStyleChanged\">\n                    <el-radio-button :label=\"1\" border>\n                        <img v-if=\"isList === 1\" :src=\"$getIconPath('toolbar_button_all@3x.png')\"/>\n                        <img v-else :src=\"$getIconPath('toolbar_button_all@3x.png')\">\n                    </el-radio-button>\n\n                    <el-radio-button :label=\"2\" border>\n                        <img v-if=\"isList === 2\" :src=\"$getIconPath('toolbar_button_all_one@3x.png')\"/>\n                        <img v-else :src=\"$getIconPath('toolbar_button_all_one@3x.png')\">\n                    </el-radio-button>\n                </el-radio-group>\n\n                <el-button\n                    plain\n                    size=\"mini\"\n                    style=\"width: 80px;\"\n                    :class=\"{ isSelect: isSelectedAll } \"\n                    @click=\"[onSelectedAllClick(), cancelBlur($event)]\">\n                    {{ isSelectedAll ? '取消全选' : '全选' }}\n                </el-button>\n\n                <el-button\n                    plain\n                    size=\"mini\"\n                    class=\"claSelectFavouriteAll\"\n                    @click=\"[onSelectFavouriteClick(), cancelBlur($event)]\">\n                    {{ `${isSelectedFavourite ? '取消选中星标' : '选中星标图片'}` }}\n                </el-button>\n            </div>\n        </div>\n        <BatchPalette\n            :image-type=\"selectionImageType\"\n            :recommendPreItems=\"recommendPreItems\"\n            :myRecommendSelectIndex=\"myRecommendSelectIndex\"\n            :myPreItems=\"myPreItems\"\n            :myCurPresetSelectIndex=\"myCurPresetSelectIndex\"\n            :histogramData=\"histogramData\"\n\n            @onAddPresetCallBack=\"onAddPresettingClick\"\n            @onNativeRightClick=\"onPresetMenuRightClick\"\n\n            @onItemClick=\"onReminderPreItemClick\"\n            @onStepChange=\"onStepChange\"\n            @onResetClick=\"onResetPaletteCallback\"\n\n            ref=\"paletteViewRef\"\n        >\n            <template slot=\"histogram\">\n                <Histogram\n                    ref=\"tsHistogram\"\n                    :chartData=\"histogramData.chartData || {}\"\n                    :imageInfo=\"histogramData.imageInfo || {}\">\n                </Histogram>\n            </template>\n        </BatchPalette>\n\n        <importProgressDialog\n            @onCancelled=\"handleCancelImport\"\n            :status=\"importProgress.status\"\n            :data=\"importProgress\"\n            :importName=\"myImportName\"\n            v-model=\"showImportProgress\">\n        </importProgressDialog>\n\n        <delete-progress-dialog\n            :status=\"deleteProgress.status\"\n            :data=\"deleteProgress\"\n            v-model=\"showDeleteProgress\">\n        </delete-progress-dialog>\n\n    </div>\n</template>\n<script>\nimport { defineComponent } from 'vue'\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\nimport {aspectScaleToFitSize, getClientHeight, getClientWidth, hexToInt} from '@/utils/utils'\nimport { TSImageIOManager } from '@/utils/tsImageIOManager'\nimport ThumbnailModel from '@/model/ThumbnailModel'\nimport { debounce } from 'lodash'\n\nimport toast from '@/mixins/toast'\nimport button from '@/mixins/button'\nimport thumbnail from '@/mixins/thumbnailMixin'\nimport tsFileImport, { PermissionRetCode } from '@/mixins/tsFileImport'\n\nimport PresettingItemModel from '@/model/PresettingItemModel'\nimport eventbus from '@/utils/eventbus'\n// 添加调色板的业务模块\nimport BatchPalette from '@/views/BatchRetouch/Palette/BatchPalette'\n\n// import PaletteParamsViewModel from '@/viewModel/paletteParamsViewModel';\n\nimport Histogram from '@/views/BatchRetouch/Palette/Histogram'\nimport { ImportProgressStatus } from '@/constants'\n\nimport ImportProgressDialog from '@/views/BatchRetouch/components/ImportProgressDialog'\nimport { BEAUTIFY_PRESET_VERSION, MAX_SUPPORT_PRESET_VERSION, PALETTE_PRESET_VERSION } from '@/constants/preset-def'\nimport PalettePresetCfgModel from '@/model/PalettePresetCfgModel'\n\nimport DBIpcRender from '@/irender/DBIpcRender'\nimport { CLIENT_NAME, PALETTE_PRESETS_CFG_TABLE, THUMBNAIL_TABLE } from '#/types/config'\nimport { ParamFlag } from '@/constants/effect-config'\nimport presetManager from '@/mixins/presetManager'\nimport { BeautifyPresetType, ImageType, PresetClassifyType, PresetSuitIdType } from '@/constants/constants'\nimport ShortcutHelper from '@/utils/Shortcut/ShortcutHelper'\nimport pointsMixin from '@/mixins/pointsMixin'\nimport { MemoryMonitor } from '@/utils/monitor/memoryMonitor'\nimport { CreateSCENE } from '@/utils/tsImageIO'\nimport { delay } from '#/utils/common'\nimport ipcRenderer from '@/qt-ipc/Ipc-renderer'\nimport eventBus from '@/utils/eventbus'\nimport batchDeleteMixin from '@/mixins/thumbnail/batchDeleteMixin'\nimport { gallery } from '@/qt-ipc/gallery'\nimport { dialogIpc } from '@/qt-ipc/dialog/DialogIpcImpl'\nimport imageIOManager from '@/qt-ipc/imageIOManager'\n\n\nexport default defineComponent({\n    name: 'batchRetouch',\n    components: {\n        BatchPalette,\n        Histogram,\n        ImportProgressDialog\n    },\n    mixins: [\n        toast,\n        button,\n        thumbnail,\n        tsFileImport,\n        presetManager,\n        pointsMixin,\n        batchDeleteMixin\n    ],\n    data() {\n        return {\n            defaultGridColumn: 5,\n            columns: 5,\n            activeName: ['recommend', 'user'],\n            isList: '1',\n            isSelectedAll: false,\n            isSelectedFavourite: false,\n            totalCount: 0, // 图片总数\n            lrEdgePadding: 105,\n            listScrollTop: 0,\n            singleScrollTop: 0,\n            // 记录导进来时的原始项对应的presetItemModel\n            imageOriPresetMap: new Map(),\n            isOnLoadPreset: false,\n            isFirstTime: true,\n            curPresetId: null,\n            isDestroy: false,\n            galleryUUID: '',\n            loadingEl: null, // loadingEl为elementUI的loading对象\n\n            reminderPresetSelectIndex: 0,\n            myPresetSelectIndex: 0,\n            recommendPaletteSelectIndex: -1,//图像调节 推荐预设\n            histogramData: {},\n            needRefreshOptStatus: true,\n            iBatchUpdateListener: null,\n            createScene: CreateSCENE.batchRetouch,\n            hanlderExportClick: null,\n            editCount: 0,\n            selectionImageType: ImageType.Jpeg, // 黄框,选中图片的格式\n            // 仅用于创建Qt端的主窗口碎片，用于loadImage时\n            needCreateMainFragment: false,\n            canDestroy: false,\n\t\t\t// 是否正在显示对话框\n\t\t\tisShowingImportDialog:false\n        }\n    },\n    watch: {\n        $route() {\n        }\n    },\n    computed: {\n        ...mapGetters([\n            'oriPreset'\n        ]),\n\n        ...mapGetters('project', [\n            'activeProject',\n            'activeProjectId'\n        ]),\n\n        ...mapGetters('thumbnail', [\n            'getThumbnails',\n            'getSelectedImgIndex',\n            'updateTime'\n        ]),\n\n        listViewHeight() {\n            let listViewH = getClientHeight()\n            listViewH = (listViewH - 56 - 50) + 'px'\n            return listViewH\n        },\n        recommendPreItems() {\n            let countsInPage = 8\n            let content = this.$store.state.presetting.recommendPreItems\n            let oriPreset = this.$store.state.presetting.oriPreset\n            content = [oriPreset].concat(content)\n            let columList = []\n            let itemList = []\n            let index = 0\n            for (let it of content) {\n                let isNewPage = index % countsInPage === 0\n                if (isNewPage) {\n                    itemList = []\n                    columList.push(itemList)\n                }\n                itemList.push(it)\n                index++\n            }\n            return columList\n        },\n        myPreItems() {\n            let countsInPage = 12\n            let content = this.$store.state.presetting.preItems\n            let columList = []\n            let itemList = []\n            let index = 0\n            for (let it of content) {\n                let isNewPage = index % countsInPage === 0\n                if (isNewPage) {\n                    itemList = []\n                    columList.push(itemList)\n                }\n                itemList.push(it)\n                index++\n            }\n            return columList\n        },\n        myRecommendSelectIndex() {\n            return this.reminderPresetSelectIndex\n        },\n        myCurPresetSelectIndex() {\n            return this.myPresetSelectIndex\n        },\n        myRecommendPaletteSelectIndex() {\n            return this.recommendPaletteSelectIndex\n        }\n    },\n    methods: {\n        ...mapActions([\n            'loadRecommendItemsIfNeed',\n            'loadAllPresents',\n            'deleteThumbnail',\n            'deletePreset',\n            'getThumbnailByIndex'\n        ]),\n\n        ...mapMutations('thumbnail', [\n            '_SetSelectedImgIndex',\n            '_SetActiveThumbnail',\n            '_SetUpdateTime'\n        ]),\n\n        ...mapActions('thumbnail', [\n            'ACT_UpdateThumbnail',\n            'ACT_UpdateThumbnailByKey',\n            'ACT_DeleteThumbnail',\n            'ACT_GetThumbnails',\n            'ACT_BatchUpdateThumbnailByKey'\n        ]),\n\n        ...mapActions('presetSuit', [\n            'ACT_IncreasePalettePreset',\n            'ACT_BatchUpdatePalettePreset',\n            'ACT_BatchCopyPaletteToSelf',\n            'ACT_GetPalettePreset'\n        ]),\n\n        ...mapMutations('project', [\n            '_SetLastProjectUpdateTime',\n            '_SetEntryProjectCache'\n        ]),\n        ...mapMutations([\n            'updateExportEffectCfg'\n        ]),\n\n        thumbnailRef() {\n            return this.$refs.thumbViewRef\n        },\n\n        onEchartDataUpdate(data, info, err) {\n            this.$tsStat.event('cake_gallery', {\n                cake_operate: 'select_one'\n            })\n            console.log('==> onEchartDataUpdate', data, info, err)\n            this.histogramData = {\n                chartData: {\n                    ...data\n                },\n                imageInfo: {\n                    ...info\n                }\n            }\n        },\n\n        onCommandLeftMouseClick(param) {\n\n        },\n\n\n        async loadImages() {\n            try {\n\n                const { id, name } = this.activeProject\n\n                // await this.ACT_GetThumbnails({projectId: id, projectName: name})\n\n                let args = {\n                    isInGallery: true,\n                    projectId: id,\n                    leftListPadding: {\n                        right: this.lrEdgePadding,\n                        top: 0,\n                        left: this.lrEdgePadding,\n                        bottom: 0\n                    },\n                    leftListMargin: {\n                        right: 300,\n                        top: 48,\n                        left: 0,\n                        bottom: 50\n                    }\n                }\n                // 从工作台过来的，就调用ipcRender.sender(\"onProjectExit\")\n                let result = {}\n                if (this.needCreateMainFragment) {\n                    result = await ipcRenderer.send('on-main-fragment-mount', {\n                        gallery: args,\n                        tab: 'batchRetouch'\n                    })\n                } else {\n                    result = await gallery.showGalleryFragment(args)\n                }\n                this.galleryUUID = result.galleryUUID\n                this.updateExportEffectCfg({\n                    isFromRefineTab: false,\n                    refineOrGalleryUUID: this.galleryUUID\n                })\n\n                const presetSuitId = [PresetSuitIdType.NoEffect, PresetSuitIdType.UnSet].includes(result.presetSuitId)\n                    ? result.presetSuitId\n                    : result.lastPresetSuitId\n                if (presetSuitId) {\n                    this.findPresetSuitIndex(presetSuitId)\n                }\n                this.canDestroy = true\n            } catch (err) {\n                console.error('==> loadImages', err)\n                this.canDestroy = true\n            }\n        },\n\n        // 过滤条件，只有选中状态的才做效果 ,预设入库\n        async loadPresetEffectCfg(presetItem) {\n            this.curPresetId = presetItem.id\n\n            let param = {\n                presetSuitId: presetItem.id,\n                presetId: presetItem.beautifyPresetId,\n                palettePresetId: presetItem.palettePresetId\n            }\n\n            const hasSelectedItem = await gallery.loadPresetEffectCfg(this.galleryUUID, param)\n\n            if (hasSelectedItem) {\n                if (!presetItem.paletteModel) {\n                    presetItem.paletteModel = await this.ACT_GetPalettePreset(presetItem.palettePresetId || -1)\n                }\n            }\n        },\n        applyEffect(needLoadPalletCfg = true) {\n            gallery.refreshView(this.galleryUUID, needLoadPalletCfg, true)\n        },\n        showLoading() {\n            gallery.showVisibleLoading(this.galleryUUID, true)\n        },\n        makeOptStatusChanged() {\n            if (!this.needRefreshOptStatus) {\n                return\n            }\n            gallery.makeOptStatusChanged(this.galleryUUID)\n        },\n\n        //TODO: 待处理\n        onAddPresettingClick(preIt) {\n            let queue = TSImageIOManager.shareInstance().imageViewModelQueue\n            if (queue == null || queue.size == 0) {\n                this.$router.push({\n                    path: 'photoFinishing',\n                    query: {}\n                })\n                return\n            }\n            let arrayObj = Array.from(queue)\n            arrayObj = arrayObj.sort(function (a, b) {\n                return a[1].imgIndex - b[1].imgIndex\n            })\n            let thumbIt = null\n            for (const queueElement of arrayObj) {\n                if (queueElement[1].isSelected) {\n                    thumbIt = queueElement[1]\n                    break\n                }\n            }\n            if (thumbIt == null) {\n                thumbIt = arrayObj[0][1]\n            }\n\n            let presetModel = thumbIt.presetModel\n            let thumbData = new ThumbnailModel()\n            thumbData.userId = this.$store.state.user.userId\n            thumbData.projectId = this.activeProjectId\n            thumbData.originalImagePath = thumbIt.imgPath\n\n            this.routerPushPhotoFinishing(thumbData, presetModel, thumbIt.imgIndex)\n        },\n\n        async onPresetClick(preIt, type) {\n            const preSet = preIt[0]\n            console.log(preSet, 88888)\n            console.log('==> onPresetClick', preSet)\n\n            if (preSet.version && preSet.version > MAX_SUPPORT_PRESET_VERSION) {\n                this.tsConfirm({\n                    title: '系统提示',\n                    message: '需要升级最新版本才能使用该预设哦~',\n                    showCancelButton: false\n                }).then(_ => {\n                }).catch(_ => {\n                })\n                return\n            }\n\n            this.isOnLoadPreset = true\n            await imageIOManager.cancelAllProcess()\n\n            await this.loadPresetEffectCfg(preSet)\n            this.showLoading()\n            this.makeOptStatusChanged()\n            this.applyEffect(true)\n            this.isOnLoadPreset = false\n            if (preSet.classifyType === PresetClassifyType.System) {\n                this.reminderPresetSelectIndex = preSet.id\n                this.myPresetSelectIndex = 0\n            } else {\n                this.reminderPresetSelectIndex = 0\n                this.myPresetSelectIndex = preSet.id\n            }\n        },\n\n        onReminderPreItemClick(data) {\n            this._SetUpdateTime(new Date())\n            this.reminderPresetSelectIndex = data[0].id\n            this.onPresetClick(data, 'reminder')\n\n        },\n        onMyPreItemClick(data) {\n            this._SetUpdateTime(new Date())\n            this.$tsStat.event('cake_gallery', {\n                cake_operate: 'click_my_preset',\n                cake_id: data[0].id\n            })\n            this.myPresetSelectIndex = data[0].id\n            this.onPresetClick(data)\n        },\n        async onStarClick(item) {\n            this.PointAddStar(item)\n            this._SetLastProjectUpdateTime(new Date())\n        },\n        async onItemRotated(param) {\n            this.$tsStat.event('cake_gallery', {\n                cake_operate: 'rotate'\n            })\n            this._SetLastProjectUpdateTime(new Date())\n        },\n        /*\n            此接口是调色板和Retouch做效果共用，调色板没有精修模块，需要提前return\n        */\n        async onThumbItemDoubleClick(param) {\n            let thumbIt = param[0]\n            let presetModel = await thumbIt.thumbnailModel.getPresetModel(this.$store)\n            let thumbData = new ThumbnailModel()\n            thumbData.userId = this.$store.state.user.userId\n            thumbData.projectId = this.activeProjectId\n            thumbData.originalImagePath = thumbIt.imgPath\n\n            this.routerPushPhotoFinishing(thumbData, presetModel, thumbIt.imgIndex)\n        },\n        async onSelectedAllClick() {\n\n            this.isSelectedAll = !this.isSelectedAll\n            if (this.isSelectedAll) {\n                this.$tsStat.event('cake_gallery', {\n                    cake_operate: 'select_all'\n                })\n            } else {\n                this.$tsStat.event('cake_gallery', {\n                    cake_operate: 'unselect_all'\n                })\n            }\n            await gallery.onSelectAll(this.galleryUUID, this.isSelectedAll)\n        },\n        /*\n            缩略图组件在加载图片的时候，自动过滤不支持的图片格式并删除,完全清空后，出现此回调\n        */\n        onHandleEmptytedThumbnail() {\n            this.$router.push({\n                path: 'importImage',\n                params: null\n            })\n        },\n\n        onSelectionChangedCallback(itemData, firstSelectedItem, presetSuit) {\n            console.log(`onSelectionChangedCallback,important.index = ${itemData},firstSelectedItem.index = ${firstSelectedItem && firstSelectedItem.imgIndex}`)\n            if (!itemData) {\n                this.reminderPresetSelectIndex = 0\n                this.myPresetSelectIndex = 0\n                return\n            }\n\n            const presetSuitId = [PresetSuitIdType.NoEffect, PresetSuitIdType.UnSet].includes(presetSuit.presetSuitId)\n                ? presetSuit.presetSuitId\n                : presetSuit.lastPresetSuitId\n\n            this.findPresetSuitIndex(presetSuitId)\n            this.selectionImageType = itemData.imgFormat\n        },\n\n        onRecvThumbnailExtraInfo(itemData){\n            let hisData = {}\n            if (itemData.hisData) {\n                hisData = {\n                    red: itemData.hisData.red ? hexToInt(itemData.hisData.red) : [],\n                    green: itemData.hisData.green ? hexToInt(itemData.hisData.green) : [],\n                    blue: itemData.hisData.blue ? hexToInt(itemData.hisData.blue) : []\n                }\n            }\n            this.onEchartDataUpdate(hisData || {}, itemData.exifInfo, null)\n        },\n\n        onEditedCount(editCount,allPhotosCount) {\n            this.editCount = editCount\n            this.totalCount = allPhotosCount\n        },\n        // 根据套装预设定位到对应的选中位置\n        findPresetSuitIndex(presetSuitId) {\n            this.$refs['paletteViewRef'].handleSetCheckedNodes(presetSuitId)\n            // 默认0不是默认预设\n            this.reminderPresetSelectIndex = 0\n            this.myPresetSelectIndex = 0\n            if (presetSuitId == null || presetSuitId == undefined) {\n                return\n            }\n\n            let content = this.$store.state.presetting.recommendPreItems\n            let oriPreset = this.$store.state.presetting.oriPreset\n            content = [oriPreset].concat(content)\n\n            let recommendIndex = -1\n            let index = -1\n            for (const presetItem of content) {\n                index++\n                if (presetSuitId == presetItem.id) {\n                    recommendIndex = index\n                    break\n                }\n            }\n            if (recommendIndex >= 0) {\n                this.reminderPresetSelectIndex = presetSuitId\n                this.myPresetSelectIndex = 0\n                return\n            }\n\n            content = this.$store.state.presetting.preItems\n            index = -1\n            let myPresetIndex = -1\n            for (const presetItem of content) {\n                index++\n                if (presetSuitId == presetItem.id) {\n                    myPresetIndex = index\n                    break\n                }\n            }\n            this.myPresetSelectIndex = presetSuitId\n            this.reminderPresetSelectIndex = 0\n        },\n        async onSelectFavouriteClick() {\n            this.isSelectedFavourite = !this.isSelectedFavourite\n            if (this.isSelectedFavourite) {\n                this.$tsStat.event('cake_gallery', {\n                    cake_operate: 'select_star'\n                })\n            } else {\n                this.$tsStat.event('cake_gallery', {\n                    cake_operate: 'unselect_star'\n                })\n            }\n            await gallery.onSelectFavorites(this.galleryUUID, this.isSelectedFavourite)\n        },\n        onListStyleChanged(val) {\n            this.changeListStyle(val)\n            const cake_operate = val == '2' ? 'click_one_view' : 'click_multiple_views'\n            this.$tsStat.event('cake_gallery', {\n                cake_operate: cake_operate\n            })\n        },\n        // 网格图和单个图的展示效果切换\n        changeListStyle(val) {\n            if (val == '2') {\n                gallery.changeListStyle(this.galleryUUID, false)\n            } else {\n                gallery.changeListStyle(this.galleryUUID, true)\n            }\n        },\n\n        //onAppQuit\n        listenWhenAppQuit() {\n            ipcRenderer.on('onAppQuit', (event, args) => {\n                // if (this.isOnLoadPreset)\n                {\n                    this.tsConfirm({\n                        title: '系统提示',\n                        message: '有效果正在应用中，请不要退出',\n                        showCancelButton: false\n                    }).then(_ => {\n                    })\n                    return\n                }\n            })\n        },\n\n        routerPushPhotoFinishing(thumbData, presetModel, imgIndex) {\n            this.isDestroy = true\n            let thumbView = this.thumbnailRef()\n            if (thumbView) {\n                thumbView.onEntryPhotoFinishingView()\n            }\n            TSImageIOManager.shareInstance().cancellAllLoad()\n            TSImageIOManager.shareInstance().cancellAllProcess()\n\n            this._SetActiveThumbnail({\n                imgPath: thumbData.originalImagePath,\n                imgIndex\n            })\n\n            this.$router.push({\n                path: 'photoFinishing',\n                query: {}\n            })\n        },\n        registerExportClickListener() {\n            this.hanlderExportClick = (event, arg) => {\n                gallery.onHandlerExportClick(this.galleryUUID)\n            }\n            eventBus.$on('onExportClick', this.hanlderExportClick)\n        },\n\n        notifySelectedIndexChanged() {\n            // let importantSelectedItem = TSImageViewStatusManager.shareInstance().importantSelectedItem\n            // if (importantSelectedItem && importantSelectedItem.isImportantSelected) {\n            // \t// importantSelectedItem.thumbnailModel.presetSuitId = 0\n            // \tthis.reminderPresetSelectIndex = 0\n            // \tthis.myPresetSelectIndex = 0\n            //\n            // \t// if (importantSelectedItem.thumbnailModel) {\n            // \t//     this.ACT_UpdateThumbnailByKey({\n            // \t//         thumbnailModel: importantSelectedItem.thumbnailModel,\n            // \t//         updateKeys: ['presetSuitId']\n            // \t//     })\n            // \t// }\n            // }\n        },\n        logGaEvent(layoutItem) {\n            let val = null\n            let keyMap = {\n                EnhanceEditColorTemperature: 'temp',\n                EnhanceEditHue: 'tone',\n                EnhanceEditExposure: 'exposure',\n                EnhanceEditContrast: 'contrast',\n                EnhanceEditHighlight: 'highlight',\n                EnhanceEditShadow: 'shadow',\n                EnhanceEditWhite: 'white',\n                EnhanceEditBlack: 'black',\n                EnhanceEditCameraRawSharpen: 'clarity',\n                EnhanceEditSaturation: 'vividness'\n            }\n            val = keyMap[layoutItem.key]\n            this.$tsStat.event('cake_gallery', {\n                cake_operate: 'click_color_button',\n                cake_feature: val\n            })\n        },\n\n        async onStepChange(layoutItem, isTemperature) {\n            this._SetUpdateTime(new Date())\n            this.$refs['paletteViewRef'].handleSetCheckedNodes(0)\n            this.logGaEvent(layoutItem[2])\n            this.notifySelectedIndexChanged()\n\n            //预设列表设置为不选中\n            this.reminderPresetSelectIndex = 0\n            this.myPresetSelectIndex = 0\n\n            let [step, isDbClick, layoutInfo, counter] = layoutItem\n            let ioQueue = TSImageIOManager.shareInstance().imageIoQueue\n            let vmQueue = TSImageIOManager.shareInstance().imageViewModelQueue\n\n            let nextStep = step\n            let ratio = isDbClick ? layoutInfo.doubleRatio : layoutInfo.singleRatio\n            nextStep = ratio * step * counter\n\n            let paletteIds = []\n            let thumbnailIds = []\n            let viewModelKeys = []\n            const copyMap = new Map()\n\n\n            for (let vmItem of vmQueue) {\n                let viewMd = vmItem[1]\n                let key = vmItem[0]\n                if (viewMd && viewMd.isSelected) {\n                    const { presetSuitId, palettePresetId } = viewMd.thumbnailModel\n\n                    // 统计需拷贝数据\n                    if (presetSuitId !== PresetSuitIdType.UnSet) {\n                        if (copyMap.has(presetSuitId)) {\n                            const temp = copyMap.get(presetSuitId)\n                            temp.push(palettePresetId)\n                            copyMap.set(presetSuitId, temp)\n                        } else {\n                            copyMap.set(presetSuitId, [palettePresetId])\n                        }\n\n                        viewMd.thumbnailModel.presetSuitId = PresetSuitIdType.UnSet\n                        thumbnailIds.push(viewMd.thumbnailModel.id)\n                    }\n\n                    // hasNewerCache 等回调后再执行\n                    viewMd.hasNewerCache = false\n                    viewMd.setIsWaitImageData(true)\n\n                    if (viewMd.thumbnailModel && palettePresetId) {\n                        paletteIds.push(palettePresetId)\n                        viewModelKeys.push(key)\n                    } else {\n                        console.error('palettePresetId is null ')\n                    }\n                }\n            }\n            if (copyMap.size > 0) {\n                await this.ACT_BatchCopyPaletteToSelf(copyMap)\n            }\n\n            this.showLoading()\n\n            if (paletteIds && paletteIds.length > 0) {\n                let key = ParamFlag[layoutInfo.key]\n                let dbKey = PalettePresetCfgModel.initKeyMap().get(key)\n                this.ACT_IncreasePalettePreset({ paletteIds, dbKey, nextStep, viewModelKeys })\n            }\n\n            if (thumbnailIds && thumbnailIds.length > 0) {\n                this.ACT_BatchUpdateThumbnailByKey({\n                    ids: thumbnailIds,\n                    updateKeys: ['presetSuitId'],\n                    data: {\n                        presetSuitId: PresetSuitIdType.UnSet\n                    }\n                })\n            }\n\n            this.updatePaletteAndRefresh(true, false)\n            this.makeOptStatusChanged()\n        },\n\n        // 重置逻辑\n        async onResetPaletteCallback(layouts) {\n            this._SetUpdateTime(new Date())\n            let vmQueue = TSImageIOManager.shareInstance().imageViewModelQueue\n            let ioQueue = TSImageIOManager.shareInstance().imageIoQueue\n\n            if (vmQueue.size === 0) return\n\n            const copyMap = new Map()\n            const thumbnailIds = []\n            const resetIds = []\n            let keys = []\n\n            for (let vmItem of vmQueue) {\n                let viewMd = vmItem[1]\n                let key = vmItem[0]\n                let imageIO = ioQueue.get(key)\n                if (viewMd && viewMd.isSelected) {\n                    viewMd.hasNewerCache = false\n                    viewMd.setIsWaitImageData(true)\n\n                    const { presetSuitId, palettePresetId } = viewMd.thumbnailModel\n\n                    // 统计需拷贝数据\n                    if (presetSuitId !== PresetSuitIdType.UnSet) {\n                        if (copyMap.has(presetSuitId)) {\n                            const temp = copyMap.get(presetSuitId)\n                            temp.push(palettePresetId)\n                            copyMap.set(presetSuitId, temp)\n                        } else {\n                            copyMap.set(presetSuitId, [palettePresetId])\n                        }\n\n                        viewMd.thumbnailModel.presetSuitId = PresetSuitIdType.UnSet\n                        thumbnailIds.push(viewMd.thumbnailModel.id)\n                    }\n\n                    keys.push(key)\n                    resetIds.push(palettePresetId)\n                }\n            }\n\n            if (copyMap.size > 0) {\n                await this.ACT_BatchCopyPaletteToSelf(copyMap)\n            }\n\n            if (thumbnailIds && thumbnailIds.length > 0) {\n                this.ACT_BatchUpdateThumbnailByKey({\n                    ids: thumbnailIds,\n                    updateKeys: ['presetSuitId'],\n                    data: {\n                        presetSuitId: PresetSuitIdType.UnSet\n                    }\n                })\n            }\n\n            // 获取重置初始值\n            const tempPaletteVmInstance = new PaletteParamsViewModel({})\n            const paramsJson = await this.ACT_GetPalettePreset('-1')\n            tempPaletteVmInstance.bindCfgModel(paramsJson)\n\n            const resetResult = tempPaletteVmInstance.resetParams(layouts.map(layout => layout.alias != null ? layout.alias : layout.key))\n            this.ACT_BatchUpdatePalettePreset({\n                ids: resetIds,\n                data: resetResult,\n                keys: keys\n            })\n\n            this.reminderPresetSelectIndex = 0\n            this.myPresetSelectIndex = 0\n\n            this.showLoading()\n            this.updatePaletteAndRefresh(true, false)\n            this.makeOptStatusChanged()\n        },\n\n        async updatePaletteAndRefresh(needLoadCfg, needApplyEffect = true) {\n            let vmQueue = TSImageIOManager.shareInstance().imageViewModelQueue\n            let queue = TSImageIOManager.shareInstance().imageIoQueue\n            for (let vmItem of vmQueue) {\n                let viewMd = vmItem[1]\n                let key = vmItem[0]\n                if (viewMd && viewMd.isSelected) {\n                    if (viewMd.isRawImage() && !viewMd.isSetWbICCAndWbTint()) {// 如果是raw的话，也要判断色温和色调，没有设置成功，不允许保存预设\n                        continue\n                    }\n                    if (needLoadCfg) {\n                        if (viewMd.isVisible && viewMd.isSelected) {\n                            let imageIo = queue.get(key)\n                            if (imageIo) {\n                                imageIo.cancelProcess()\n                            }\n                        }\n                    }\n                }\n            }\n            if (needApplyEffect) {\n                this.applyEffect(needLoadCfg)\n            }\n        },\n\n        async importFromFile(args) {\n            console.log(`二次从文件的导入:`)\n\t\t\tif (this.isShowingImportDialog){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.isShowingImportDialog = true\n            const dialog = dialogIpc\n            const result = await dialog.showOpenDialog({\n                properties: args,\n                filters: [{\n                    name: 'Images',\n                    extensions: this.supportedExtendNames()\n                }]\n            })\n            if (result && result.filePaths && result.filePaths.length == 0) {\n\t\t\t\tthis.isShowingImportDialog = false\n                return\n            }\n            const checkRet = await this.hasReadWritePermission(result.filePaths)\n\n            if (checkRet.result == PermissionRetCode.OK) {\n                await this.secondImportFiles(result.filePaths)\n            }\n\t\t\tthis.isShowingImportDialog = false\n\t\t},\n        async secondImportFiles(paths) {\n            const checkRet = await this.hasReadWritePermission(paths)\n            if (checkRet.result !== PermissionRetCode.OK) {\n                this.toastNoReadWritePermission(checkRet)\n                return\n            }\n\n            await this.checkAndImportImages(paths, true, (thumbnailCount) => {\n                gallery.handlerAfterSecondImport(this.galleryUUID)\n                this.tsNotify({\n                    message: `已导入${thumbnailCount}张图片`\n                })\n            }, progress => {\n                if (progress.status === ImportProgressStatus.Start) {\n                    this.showImportProgress = true\n                }\n                this.importProgress = progress\n            })\n            this._SetLastProjectUpdateTime(new Date())\n        },\n        // 支持拖拽导入\n        async onDropHanlder(filePaths) {\n            let files = this.getDropPaths()\n            let paths = []\n            for (let file of files) {\n                let fp = file.path\n                paths.push(fp)\n            }\n            await this.secondImportFiles(paths)\n        },\n        setNeedCreateMainFragmentTag(from, to) {\n            if (from.name == 'index' || from.name == \"importImage\") {\n                this.needCreateMainFragment = true\n            } else {\n                this.needCreateMainFragment = false\n            }\n        },\n        async doWhenLeave(from, to) {\n            console.log('doWhenLeave from : ' + from.name, \" to : \" + to.name)\n            let ret;\n            if (to.name == 'index' || to.name == 'Login') {\n                ret = await gallery.hideGalleryFragment(this.galleryUUID)\n                await ipcRenderer.send('on-main-fragment-unmount', {})\n            } else {\n                // if (to.name !== 'batchRetouch' && to.name !== 'photoFinishing'){\n                // }\n               ret = await gallery.hideGalleryFragment(this.galleryUUID)\n            }\n            console.log(\"doWhenLeave result \" + JSON.stringify(ret))\n        }\n    },\n    beforeCreate() {\n    },\n    beforeRouteEnter(to, from, next) {\n        next(vm => {\n            vm._SetEntryProjectCache(to.name)\n            vm.setNeedCreateMainFragmentTag(from, to)\n        })\n    },\n    async beforeRouteLeave(to, from, next) {\n        if (!this.canDestroy) {\n            console.log('not load view finish')\n            return\n        }\n        await this.doWhenLeave(from, to)\n        this.isFirstTime = true\n        // 退出当前页面更新需要重做的标志\n        if (this.isOnLoadPreset) {\n            this.tsConfirm({\n                title: '系统提示',\n                message: '有效果正在应用中，请不要退出',\n                showCancelButton: false\n            }).then(_ => {\n                next()\n            })\n            return\n        }\n        next()\n    },\n    async mounted() {\n        this.canDestroy = false\n        gallery.addListener('signalSelects', param => {\n            let { isSelectedAll, hasSelectedFavorites } = param\n            this.isSelectedAll = isSelectedAll\n            this.isSelectedFavourite = hasSelectedFavorites\n        })\n        gallery.addListener('signalSelectionChanged', this.onSelectionChangedCallback)\n        gallery.addListener('signalClearGallery', this.onHandleEmptytedThumbnail)\n        gallery.addListener('signalStarClick', this.onStarClick)\n        gallery.addListener('signalEditedCount', this.onEditedCount)\n        gallery.addListener('signalRotate', this.onItemRotated)\n        gallery.addListener('signalThumbnailExtraInfo',this.onRecvThumbnailExtraInfo)\n\n        MemoryMonitor.shareInstance().addObject(this)\n        // 提示导入图片张数\n        if (this.$route.query.imageFilePaths && this.$route.query.imageFilePaths.length > 0 && this.$route.query.isfromHome === true) {\n            this.tsNotify({\n                message: `已导入${this.$route.query.imageFilePaths.length}张图片`\n            })\n        }\n        eventbus.$on('onNavImportImage', debounce(async (args) => {\n            ShortcutHelper.getInstance().unRegisterShortcut()\n            await this.importFromFile(args)\n            ShortcutHelper.getInstance().registerShortcut()\n        }, 20))\n\n\t\teventbus.$on('onManualImportClick', debounce(async (args) => {\n\t\t\tawait this.onManualImportClick(args)\n\t\t}, 20))\n\n        eventbus.$on('initloadBatchRetouch', debounce(() => {\n            this.isFirstTime = true\n            this.loadImages()\n        }, 20))\n        this.isFirstTime = true\n        //\n        let userId = this.$store.state.user.userId\n\n        this.loadAllPresents(\n            {\n                userId: userId\n            }\n        ).then(res => {\n        }).catch(e => {\n            this.tsNotify({\n                type: 'error',\n                message: e.message\n            })\n        })\n\n        try {\n            await this.loadImages()\n        } catch (err) {\n            console.error('==> loadImages', err)\n        }\n\n        let imgIndex = this.getSelectedImgIndex\n        if (imgIndex) {\n            imgIndex = Math.ceil(imgIndex / this.columns)\n            this._SetSelectedImgIndex(null)\n        }\n\n    },\n    beforeDestroy() {\n        this.isDestroy = true;\n        if (this.hanlderExportClick) {\n            eventBus.$off('onExportClick', this.hanlderExportClick)\n        }\n        eventbus.$off('onNavImportImage', null)\n        eventbus.$off('initloadBatchRetouch', null)\n\t\teventbus.$off('onManualImportClick', null)\n\n\t\tgallery.removeListener('signalSelects')\n        gallery.removeListener('signalSelectionChanged')\n        gallery.removeListener('signalClearGallery')\n        gallery.removeListener('signalStarClick')\n        gallery.removeListener('signalEditedCount')\n        gallery.removeListener('signalRotate')\n        gallery.removeListener('signalOnDropStart')\n        gallery.removeListener('signalThumbnailExtraInfo')\n    }\n})\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../assets/theme/common/pages/batch-retouch.scss\";\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchRetouch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchRetouch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BatchRetouch.vue?vue&type=template&id=4b4eafab&scoped=true&\"\nimport script from \"./BatchRetouch.vue?vue&type=script&lang=js&\"\nexport * from \"./BatchRetouch.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BatchRetouch.vue?vue&type=style&index=0&id=4b4eafab&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b4eafab\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSParamStepControl.vue?vue&type=style&index=0&id=528a5392&prod&lang=scss&scoped=true&\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BatchPalette.vue?vue&type=style&index=0&id=1153dd53&prod&lang=scss&scoped=true&\""],"sourceRoot":""}